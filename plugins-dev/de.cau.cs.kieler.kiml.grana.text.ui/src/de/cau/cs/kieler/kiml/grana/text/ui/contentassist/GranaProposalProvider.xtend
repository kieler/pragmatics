/*
 * generated by Xtext
 */
package de.cau.cs.kieler.kiml.grana.text.ui.contentassist

import de.cau.cs.kieler.kiml.grana.AnalysisService
import org.eclipse.core.resources.ResourcesPlugin
import org.eclipse.emf.ecore.EObject
import org.eclipse.jface.viewers.StyledString
import org.eclipse.xtext.Assignment
import org.eclipse.xtext.ui.editor.contentassist.ContentAssistContext
import org.eclipse.xtext.ui.editor.contentassist.ICompletionProposalAcceptor

/**
 * see http://www.eclipse.org/Xtext/documentation.html#contentAssist on how to customize content assistant
 */
class GranaProposalProvider extends AbstractGranaProposalProvider {
    
//    override completeResource_Path(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//        
//        val members = ResourcesPlugin.workspace.root.members
//        
//        for (m : members) {
//            val proposal = m.fullPath.toString
//            val displayString = new StyledString(proposal)
//            
//            acceptor.accept(doCreateProposal(proposal, displayString, null,
//                            getPriorityHelper().getDefaultPriority(), context));
//        }
//        
//        super.completeResource_Path(model, assignment, context, acceptor)
//    }
    
    override completeAnalysis_Name(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
        
        super.completeAnalysis_Name(model, assignment, context, acceptor)

        // propose all known analyses that match the current prefix
        for (a : AnalysisService.instance.analyses) {
            if (isValidProposal(a.id, context.prefix, context)) {
                val displayString = new StyledString(a.name)
                acceptor.accept(doCreateProposal(a.id, displayString, null, priorityHelper.defaultPriority + 1, context))
            }
        }

    }
    
}
