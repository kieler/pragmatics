/*
 * generated by Xtext
 */
package de.cau.cs.kieler.grana.text.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.elk.graph.text.services.ElkGraphGrammarAccess;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class GranaGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class GranaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.grana.text.Grana.Grana");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cGlobalResourcesKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cGlobalResourcesAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cGlobalResourcesGlobalResourceRefParserRuleCall_0_1_0 = (RuleCall)cGlobalResourcesAssignment_0_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cGlobalOutputsKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cGloobalOutputsAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cGloobalOutputsGlobalOutputRefParserRuleCall_1_1_0 = (RuleCall)cGloobalOutputsAssignment_1_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cExecuteKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cParallelAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final Keyword cParallelParallelKeyword_2_1_0 = (Keyword)cParallelAssignment_2_1.eContents().get(0);
		private final Alternatives cAlternatives_2_2 = (Alternatives)cGroup_2.eContents().get(2);
		private final Assignment cExecuteAllAssignment_2_2_0 = (Assignment)cAlternatives_2_2.eContents().get(0);
		private final Keyword cExecuteAllAllKeyword_2_2_0_0 = (Keyword)cExecuteAllAssignment_2_2_0.eContents().get(0);
		private final Assignment cExecuteAssignment_2_2_1 = (Assignment)cAlternatives_2_2.eContents().get(1);
		private final CrossReference cExecuteJobCrossReference_2_2_1_0 = (CrossReference)cExecuteAssignment_2_2_1.eContents().get(0);
		private final RuleCall cExecuteJobIDTerminalRuleCall_2_2_1_0_1 = (RuleCall)cExecuteJobCrossReference_2_2_1_0.eContents().get(1);
		private final Assignment cJobsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cJobsJobParserRuleCall_3_0 = (RuleCall)cJobsAssignment_3.eContents().get(0);
		
		//Grana:
		//	('globalResources' globalResources+=GlobalResourceRef*)? ('globalOutputs' gloobalOutputs+=GlobalOutputRef*)?
		//	('execute' parallel?='parallel'? (executeAll?='all' | execute+=[Job]+)) jobs+=Job+;
		@Override public ParserRule getRule() { return rule; }

		//('globalResources' globalResources+=GlobalResourceRef*)? ('globalOutputs' gloobalOutputs+=GlobalOutputRef*)? ('execute'
		//parallel?='parallel'? (executeAll?='all' | execute+=[Job]+)) jobs+=Job+
		public Group getGroup() { return cGroup; }

		//('globalResources' globalResources+=GlobalResourceRef*)?
		public Group getGroup_0() { return cGroup_0; }

		//'globalResources'
		public Keyword getGlobalResourcesKeyword_0_0() { return cGlobalResourcesKeyword_0_0; }

		//globalResources+=GlobalResourceRef*
		public Assignment getGlobalResourcesAssignment_0_1() { return cGlobalResourcesAssignment_0_1; }

		//GlobalResourceRef
		public RuleCall getGlobalResourcesGlobalResourceRefParserRuleCall_0_1_0() { return cGlobalResourcesGlobalResourceRefParserRuleCall_0_1_0; }

		//('globalOutputs' gloobalOutputs+=GlobalOutputRef*)?
		public Group getGroup_1() { return cGroup_1; }

		//'globalOutputs'
		public Keyword getGlobalOutputsKeyword_1_0() { return cGlobalOutputsKeyword_1_0; }

		//gloobalOutputs+=GlobalOutputRef*
		public Assignment getGloobalOutputsAssignment_1_1() { return cGloobalOutputsAssignment_1_1; }

		//GlobalOutputRef
		public RuleCall getGloobalOutputsGlobalOutputRefParserRuleCall_1_1_0() { return cGloobalOutputsGlobalOutputRefParserRuleCall_1_1_0; }

		//('execute' parallel?='parallel'? (executeAll?='all' | execute+=[Job]+))
		public Group getGroup_2() { return cGroup_2; }

		//'execute'
		public Keyword getExecuteKeyword_2_0() { return cExecuteKeyword_2_0; }

		//parallel?='parallel'?
		public Assignment getParallelAssignment_2_1() { return cParallelAssignment_2_1; }

		//'parallel'
		public Keyword getParallelParallelKeyword_2_1_0() { return cParallelParallelKeyword_2_1_0; }

		//(executeAll?='all' | execute+=[Job]+)
		public Alternatives getAlternatives_2_2() { return cAlternatives_2_2; }

		//executeAll?='all'
		public Assignment getExecuteAllAssignment_2_2_0() { return cExecuteAllAssignment_2_2_0; }

		//'all'
		public Keyword getExecuteAllAllKeyword_2_2_0_0() { return cExecuteAllAllKeyword_2_2_0_0; }

		//execute+=[Job]+
		public Assignment getExecuteAssignment_2_2_1() { return cExecuteAssignment_2_2_1; }

		//[Job]
		public CrossReference getExecuteJobCrossReference_2_2_1_0() { return cExecuteJobCrossReference_2_2_1_0; }

		//ID
		public RuleCall getExecuteJobIDTerminalRuleCall_2_2_1_0_1() { return cExecuteJobIDTerminalRuleCall_2_2_1_0_1; }

		//jobs+=Job+
		public Assignment getJobsAssignment_3() { return cJobsAssignment_3; }

		//Job
		public RuleCall getJobsJobParserRuleCall_3_0() { return cJobsJobParserRuleCall_3_0; }
	}

	public class JobElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.grana.text.Grana.Job");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cRegularJobParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cRangeJobParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cCompareJobParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//Job:
		//	RegularJob | RangeJob | CompareJob;
		@Override public ParserRule getRule() { return rule; }

		//RegularJob | RangeJob | CompareJob
		public Alternatives getAlternatives() { return cAlternatives; }

		//RegularJob
		public RuleCall getRegularJobParserRuleCall_0() { return cRegularJobParserRuleCall_0; }

		//RangeJob
		public RuleCall getRangeJobParserRuleCall_1() { return cRangeJobParserRuleCall_1; }

		//CompareJob
		public RuleCall getCompareJobParserRuleCall_2() { return cCompareJobParserRuleCall_2; }
	}

	public class RegularJobElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.grana.text.Grana.RegularJob");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cJobKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cLayoutBeforeAnalysisAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cLayoutBeforeAnalysisLayoutBeforeAnalysisKeyword_2_0 = (Keyword)cLayoutBeforeAnalysisAssignment_2.eContents().get(0);
		private final Assignment cMeasureExecutionTimeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cMeasureExecutionTimeMeasureExecutionTimeKeyword_3_0 = (Keyword)cMeasureExecutionTimeAssignment_3.eContents().get(0);
		private final Keyword cResourcesKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cResourcesAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cResourcesResourceParserRuleCall_5_0 = (RuleCall)cResourcesAssignment_5.eContents().get(0);
		private final Keyword cLayoutoptionsKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cLayoutOptionsAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cLayoutOptionsLayoutConfigParserRuleCall_7_0 = (RuleCall)cLayoutOptionsAssignment_7.eContents().get(0);
		private final Keyword cAnalysesKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cAnalysesAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cAnalysesAnalysisParserRuleCall_9_0 = (RuleCall)cAnalysesAssignment_9.eContents().get(0);
		private final Keyword cOutputKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cOutputTypeAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cOutputTypeOutputTypeEnumRuleCall_11_0 = (RuleCall)cOutputTypeAssignment_11.eContents().get(0);
		private final Assignment cOutputAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cOutputOutputParserRuleCall_12_0 = (RuleCall)cOutputAssignment_12.eContents().get(0);
		
		//RegularJob:
		//	'job' name=ID layoutBeforeAnalysis?='layoutBeforeAnalysis'?
		//	measureExecutionTime?='measureExecutionTime'?
		//	'resources'
		//	resources+=Resource+
		//	'layoutoptions'
		//	layoutOptions+=LayoutConfig+
		//	'analyses'
		//	analyses+=Analysis+
		//	'output'
		//	outputType=OutputType? output=Output;
		@Override public ParserRule getRule() { return rule; }

		//'job' name=ID layoutBeforeAnalysis?='layoutBeforeAnalysis'? measureExecutionTime?='measureExecutionTime'? 'resources'
		//resources+=Resource+ 'layoutoptions' layoutOptions+=LayoutConfig+ 'analyses' analyses+=Analysis+ 'output'
		//outputType=OutputType? output=Output
		public Group getGroup() { return cGroup; }

		//'job'
		public Keyword getJobKeyword_0() { return cJobKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//layoutBeforeAnalysis?='layoutBeforeAnalysis'?
		public Assignment getLayoutBeforeAnalysisAssignment_2() { return cLayoutBeforeAnalysisAssignment_2; }

		//'layoutBeforeAnalysis'
		public Keyword getLayoutBeforeAnalysisLayoutBeforeAnalysisKeyword_2_0() { return cLayoutBeforeAnalysisLayoutBeforeAnalysisKeyword_2_0; }

		//measureExecutionTime?='measureExecutionTime'?
		public Assignment getMeasureExecutionTimeAssignment_3() { return cMeasureExecutionTimeAssignment_3; }

		//'measureExecutionTime'
		public Keyword getMeasureExecutionTimeMeasureExecutionTimeKeyword_3_0() { return cMeasureExecutionTimeMeasureExecutionTimeKeyword_3_0; }

		//'resources'
		public Keyword getResourcesKeyword_4() { return cResourcesKeyword_4; }

		//resources+=Resource+
		public Assignment getResourcesAssignment_5() { return cResourcesAssignment_5; }

		//Resource
		public RuleCall getResourcesResourceParserRuleCall_5_0() { return cResourcesResourceParserRuleCall_5_0; }

		//'layoutoptions'
		public Keyword getLayoutoptionsKeyword_6() { return cLayoutoptionsKeyword_6; }

		//layoutOptions+=LayoutConfig+
		public Assignment getLayoutOptionsAssignment_7() { return cLayoutOptionsAssignment_7; }

		//LayoutConfig
		public RuleCall getLayoutOptionsLayoutConfigParserRuleCall_7_0() { return cLayoutOptionsLayoutConfigParserRuleCall_7_0; }

		//'analyses'
		public Keyword getAnalysesKeyword_8() { return cAnalysesKeyword_8; }

		//analyses+=Analysis+
		public Assignment getAnalysesAssignment_9() { return cAnalysesAssignment_9; }

		//Analysis
		public RuleCall getAnalysesAnalysisParserRuleCall_9_0() { return cAnalysesAnalysisParserRuleCall_9_0; }

		//'output'
		public Keyword getOutputKeyword_10() { return cOutputKeyword_10; }

		//outputType=OutputType?
		public Assignment getOutputTypeAssignment_11() { return cOutputTypeAssignment_11; }

		//OutputType
		public RuleCall getOutputTypeOutputTypeEnumRuleCall_11_0() { return cOutputTypeOutputTypeEnumRuleCall_11_0; }

		//output=Output
		public Assignment getOutputAssignment_12() { return cOutputAssignment_12; }

		//Output
		public RuleCall getOutputOutputParserRuleCall_12_0() { return cOutputOutputParserRuleCall_12_0; }
	}

	public class CompareJobElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.grana.text.Grana.CompareJob");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cComparejobKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cResourcesKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cResourcesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cResourcesResourceParserRuleCall_3_0 = (RuleCall)cResourcesAssignment_3.eContents().get(0);
		private final Keyword cLayoutoptionsKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cLayoutOptionsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cLayoutOptionsLayoutConfigParserRuleCall_5_0 = (RuleCall)cLayoutOptionsAssignment_5.eContents().get(0);
		private final Assignment cLayoutOptionsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cLayoutOptionsLayoutConfigParserRuleCall_6_0 = (RuleCall)cLayoutOptionsAssignment_6.eContents().get(0);
		private final Keyword cAnalysesKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cAnalysesAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cAnalysesAnalysisParserRuleCall_8_0 = (RuleCall)cAnalysesAssignment_8.eContents().get(0);
		private final Keyword cOutputKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cOutputTypeAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cOutputTypeOutputTypeEnumRuleCall_10_0 = (RuleCall)cOutputTypeAssignment_10.eContents().get(0);
		private final Assignment cOutputAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cOutputOutputParserRuleCall_11_0 = (RuleCall)cOutputAssignment_11.eContents().get(0);
		
		//CompareJob:
		//	'comparejob' name=ID
		//	'resources' resources+=Resource+
		//	'layoutoptions'
		//	layoutOptions+=LayoutConfig layoutOptions+=LayoutConfig 'analyses'
		//	analyses+=Analysis+
		//	'output'
		//	outputType=OutputType? output=Output;
		@Override public ParserRule getRule() { return rule; }

		//'comparejob' name=ID 'resources' resources+=Resource+ 'layoutoptions' layoutOptions+=LayoutConfig
		//layoutOptions+=LayoutConfig 'analyses' analyses+=Analysis+ 'output' outputType=OutputType? output=Output
		public Group getGroup() { return cGroup; }

		//'comparejob'
		public Keyword getComparejobKeyword_0() { return cComparejobKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//'resources'
		public Keyword getResourcesKeyword_2() { return cResourcesKeyword_2; }

		//resources+=Resource+
		public Assignment getResourcesAssignment_3() { return cResourcesAssignment_3; }

		//Resource
		public RuleCall getResourcesResourceParserRuleCall_3_0() { return cResourcesResourceParserRuleCall_3_0; }

		//'layoutoptions'
		public Keyword getLayoutoptionsKeyword_4() { return cLayoutoptionsKeyword_4; }

		//layoutOptions+=LayoutConfig
		public Assignment getLayoutOptionsAssignment_5() { return cLayoutOptionsAssignment_5; }

		//LayoutConfig
		public RuleCall getLayoutOptionsLayoutConfigParserRuleCall_5_0() { return cLayoutOptionsLayoutConfigParserRuleCall_5_0; }

		//layoutOptions+=LayoutConfig
		public Assignment getLayoutOptionsAssignment_6() { return cLayoutOptionsAssignment_6; }

		//LayoutConfig
		public RuleCall getLayoutOptionsLayoutConfigParserRuleCall_6_0() { return cLayoutOptionsLayoutConfigParserRuleCall_6_0; }

		//'analyses'
		public Keyword getAnalysesKeyword_7() { return cAnalysesKeyword_7; }

		//analyses+=Analysis+
		public Assignment getAnalysesAssignment_8() { return cAnalysesAssignment_8; }

		//Analysis
		public RuleCall getAnalysesAnalysisParserRuleCall_8_0() { return cAnalysesAnalysisParserRuleCall_8_0; }

		//'output'
		public Keyword getOutputKeyword_9() { return cOutputKeyword_9; }

		//outputType=OutputType?
		public Assignment getOutputTypeAssignment_10() { return cOutputTypeAssignment_10; }

		//OutputType
		public RuleCall getOutputTypeOutputTypeEnumRuleCall_10_0() { return cOutputTypeOutputTypeEnumRuleCall_10_0; }

		//output=Output
		public Assignment getOutputAssignment_11() { return cOutputAssignment_11; }

		//Output
		public RuleCall getOutputOutputParserRuleCall_11_0() { return cOutputOutputParserRuleCall_11_0; }
	}

	public class RangeJobElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.grana.text.Grana.RangeJob");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRangejobKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cMeasureExecutionTimeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cMeasureExecutionTimeMeasureExecutionTimeKeyword_2_0 = (Keyword)cMeasureExecutionTimeAssignment_2.eContents().get(0);
		private final Keyword cResourcesKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cResourcesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cResourcesResourceParserRuleCall_4_0 = (RuleCall)cResourcesAssignment_4.eContents().get(0);
		private final Keyword cLayoutoptionsKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cLayoutOptionsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cLayoutOptionsLayoutConfigParserRuleCall_6_0 = (RuleCall)cLayoutOptionsAssignment_6.eContents().get(0);
		private final Keyword cAnalysesKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cAnalysesAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cAnalysesAnalysisParserRuleCall_8_0 = (RuleCall)cAnalysesAssignment_8.eContents().get(0);
		private final Keyword cRangeoptionKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cRangeOptionAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cRangeOptionQualifiedIdParserRuleCall_10_0 = (RuleCall)cRangeOptionAssignment_10.eContents().get(0);
		private final Assignment cRangeValuesAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cRangeValuesRangeParserRuleCall_11_0 = (RuleCall)cRangeValuesAssignment_11.eContents().get(0);
		private final Alternatives cAlternatives_12 = (Alternatives)cGroup.eContents().get(12);
		private final Group cGroup_12_0 = (Group)cAlternatives_12.eContents().get(0);
		private final Keyword cRangeanalysisKeyword_12_0_0 = (Keyword)cGroup_12_0.eContents().get(0);
		private final Assignment cRangeAnalysisAssignment_12_0_1 = (Assignment)cGroup_12_0.eContents().get(1);
		private final RuleCall cRangeAnalysisAnalysisParserRuleCall_12_0_1_0 = (RuleCall)cRangeAnalysisAssignment_12_0_1.eContents().get(0);
		private final Group cGroup_12_0_2 = (Group)cGroup_12_0.eContents().get(2);
		private final Keyword cComponentKeyword_12_0_2_0 = (Keyword)cGroup_12_0_2.eContents().get(0);
		private final Assignment cRangeAnalysisComponentAssignment_12_0_2_1 = (Assignment)cGroup_12_0_2.eContents().get(1);
		private final RuleCall cRangeAnalysisComponentSIGNED_INTTerminalRuleCall_12_0_2_1_0 = (RuleCall)cRangeAnalysisComponentAssignment_12_0_2_1.eContents().get(0);
		private final Group cGroup_12_1 = (Group)cAlternatives_12.eContents().get(1);
		private final Keyword cRangeanalysesKeyword_12_1_0 = (Keyword)cGroup_12_1.eContents().get(0);
		private final Assignment cRangeAnalysesAssignment_12_1_1 = (Assignment)cGroup_12_1.eContents().get(1);
		private final RuleCall cRangeAnalysesAnalysisParserRuleCall_12_1_1_0 = (RuleCall)cRangeAnalysesAssignment_12_1_1.eContents().get(0);
		private final Keyword cOutputKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Assignment cOutputTypeAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cOutputTypeOutputTypeEnumRuleCall_14_0 = (RuleCall)cOutputTypeAssignment_14.eContents().get(0);
		private final Assignment cOutputAssignment_15 = (Assignment)cGroup.eContents().get(15);
		private final RuleCall cOutputOutputParserRuleCall_15_0 = (RuleCall)cOutputAssignment_15.eContents().get(0);
		
		//RangeJob:
		//	'rangejob' name=ID
		//	measureExecutionTime?='measureExecutionTime'?
		//	'resources' resources+=Resource+
		//	'layoutoptions'
		//	layoutOptions+=LayoutConfig+
		//	'analyses'
		//	analyses+=Analysis+
		//	'rangeoption'
		//	rangeOption=QualifiedId
		//	rangeValues=Range ('rangeanalysis'
		//	rangeAnalysis=Analysis ('component' rangeAnalysisComponent=SIGNED_INT)? |
		//	'rangeanalyses'
		//	rangeAnalyses+=Analysis+)
		//	'output'
		//	outputType=OutputType? output=Output;
		@Override public ParserRule getRule() { return rule; }

		//'rangejob' name=ID measureExecutionTime?='measureExecutionTime'? 'resources' resources+=Resource+ 'layoutoptions'
		//layoutOptions+=LayoutConfig+ 'analyses' analyses+=Analysis+ 'rangeoption' rangeOption=QualifiedId rangeValues=Range
		//('rangeanalysis' rangeAnalysis=Analysis ('component' rangeAnalysisComponent=SIGNED_INT)? | 'rangeanalyses'
		//rangeAnalyses+=Analysis+) 'output' outputType=OutputType? output=Output
		public Group getGroup() { return cGroup; }

		//'rangejob'
		public Keyword getRangejobKeyword_0() { return cRangejobKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//measureExecutionTime?='measureExecutionTime'?
		public Assignment getMeasureExecutionTimeAssignment_2() { return cMeasureExecutionTimeAssignment_2; }

		//'measureExecutionTime'
		public Keyword getMeasureExecutionTimeMeasureExecutionTimeKeyword_2_0() { return cMeasureExecutionTimeMeasureExecutionTimeKeyword_2_0; }

		//'resources'
		public Keyword getResourcesKeyword_3() { return cResourcesKeyword_3; }

		//resources+=Resource+
		public Assignment getResourcesAssignment_4() { return cResourcesAssignment_4; }

		//Resource
		public RuleCall getResourcesResourceParserRuleCall_4_0() { return cResourcesResourceParserRuleCall_4_0; }

		//'layoutoptions'
		public Keyword getLayoutoptionsKeyword_5() { return cLayoutoptionsKeyword_5; }

		//layoutOptions+=LayoutConfig+
		public Assignment getLayoutOptionsAssignment_6() { return cLayoutOptionsAssignment_6; }

		//LayoutConfig
		public RuleCall getLayoutOptionsLayoutConfigParserRuleCall_6_0() { return cLayoutOptionsLayoutConfigParserRuleCall_6_0; }

		//'analyses'
		public Keyword getAnalysesKeyword_7() { return cAnalysesKeyword_7; }

		//analyses+=Analysis+
		public Assignment getAnalysesAssignment_8() { return cAnalysesAssignment_8; }

		//Analysis
		public RuleCall getAnalysesAnalysisParserRuleCall_8_0() { return cAnalysesAnalysisParserRuleCall_8_0; }

		//'rangeoption'
		public Keyword getRangeoptionKeyword_9() { return cRangeoptionKeyword_9; }

		//rangeOption=QualifiedId
		public Assignment getRangeOptionAssignment_10() { return cRangeOptionAssignment_10; }

		//QualifiedId
		public RuleCall getRangeOptionQualifiedIdParserRuleCall_10_0() { return cRangeOptionQualifiedIdParserRuleCall_10_0; }

		//rangeValues=Range
		public Assignment getRangeValuesAssignment_11() { return cRangeValuesAssignment_11; }

		//Range
		public RuleCall getRangeValuesRangeParserRuleCall_11_0() { return cRangeValuesRangeParserRuleCall_11_0; }

		//('rangeanalysis' rangeAnalysis=Analysis ('component' rangeAnalysisComponent=SIGNED_INT)? | 'rangeanalyses'
		//rangeAnalyses+=Analysis+)
		public Alternatives getAlternatives_12() { return cAlternatives_12; }

		//'rangeanalysis' rangeAnalysis=Analysis ('component' rangeAnalysisComponent=SIGNED_INT)?
		public Group getGroup_12_0() { return cGroup_12_0; }

		//'rangeanalysis'
		public Keyword getRangeanalysisKeyword_12_0_0() { return cRangeanalysisKeyword_12_0_0; }

		//rangeAnalysis=Analysis
		public Assignment getRangeAnalysisAssignment_12_0_1() { return cRangeAnalysisAssignment_12_0_1; }

		//Analysis
		public RuleCall getRangeAnalysisAnalysisParserRuleCall_12_0_1_0() { return cRangeAnalysisAnalysisParserRuleCall_12_0_1_0; }

		//('component' rangeAnalysisComponent=SIGNED_INT)?
		public Group getGroup_12_0_2() { return cGroup_12_0_2; }

		//'component'
		public Keyword getComponentKeyword_12_0_2_0() { return cComponentKeyword_12_0_2_0; }

		//rangeAnalysisComponent=SIGNED_INT
		public Assignment getRangeAnalysisComponentAssignment_12_0_2_1() { return cRangeAnalysisComponentAssignment_12_0_2_1; }

		//SIGNED_INT
		public RuleCall getRangeAnalysisComponentSIGNED_INTTerminalRuleCall_12_0_2_1_0() { return cRangeAnalysisComponentSIGNED_INTTerminalRuleCall_12_0_2_1_0; }

		//'rangeanalyses' rangeAnalyses+=Analysis+
		public Group getGroup_12_1() { return cGroup_12_1; }

		//'rangeanalyses'
		public Keyword getRangeanalysesKeyword_12_1_0() { return cRangeanalysesKeyword_12_1_0; }

		//rangeAnalyses+=Analysis+
		public Assignment getRangeAnalysesAssignment_12_1_1() { return cRangeAnalysesAssignment_12_1_1; }

		//Analysis
		public RuleCall getRangeAnalysesAnalysisParserRuleCall_12_1_1_0() { return cRangeAnalysesAnalysisParserRuleCall_12_1_1_0; }

		//'output'
		public Keyword getOutputKeyword_13() { return cOutputKeyword_13; }

		//outputType=OutputType?
		public Assignment getOutputTypeAssignment_14() { return cOutputTypeAssignment_14; }

		//OutputType
		public RuleCall getOutputTypeOutputTypeEnumRuleCall_14_0() { return cOutputTypeOutputTypeEnumRuleCall_14_0; }

		//output=Output
		public Assignment getOutputAssignment_15() { return cOutputAssignment_15; }

		//Output
		public RuleCall getOutputOutputParserRuleCall_15_0() { return cOutputOutputParserRuleCall_15_0; }
	}

	public class RangeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.grana.text.Grana.Range");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cFloatRangeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIntRangeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cEnumRangeParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//Range:
		//	FloatRange | IntRange | EnumRange;
		@Override public ParserRule getRule() { return rule; }

		//FloatRange | IntRange | EnumRange
		public Alternatives getAlternatives() { return cAlternatives; }

		//FloatRange
		public RuleCall getFloatRangeParserRuleCall_0() { return cFloatRangeParserRuleCall_0; }

		//IntRange
		public RuleCall getIntRangeParserRuleCall_1() { return cIntRangeParserRuleCall_1; }

		//EnumRange
		public RuleCall getEnumRangeParserRuleCall_2() { return cEnumRangeParserRuleCall_2; }
	}

	public class FloatRangeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.grana.text.Grana.FloatRange");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFloatvaluesKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cValuesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValuesFLOATTerminalRuleCall_1_0 = (RuleCall)cValuesAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cValuesAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cValuesFLOATTerminalRuleCall_2_1_0 = (RuleCall)cValuesAssignment_2_1.eContents().get(0);
		
		//FloatRange:
		//	'floatvalues' values+=FLOAT (',' values+=FLOAT)*;
		@Override public ParserRule getRule() { return rule; }

		//'floatvalues' values+=FLOAT (',' values+=FLOAT)*
		public Group getGroup() { return cGroup; }

		//'floatvalues'
		public Keyword getFloatvaluesKeyword_0() { return cFloatvaluesKeyword_0; }

		//values+=FLOAT
		public Assignment getValuesAssignment_1() { return cValuesAssignment_1; }

		//FLOAT
		public RuleCall getValuesFLOATTerminalRuleCall_1_0() { return cValuesFLOATTerminalRuleCall_1_0; }

		//(',' values+=FLOAT)*
		public Group getGroup_2() { return cGroup_2; }

		//','
		public Keyword getCommaKeyword_2_0() { return cCommaKeyword_2_0; }

		//values+=FLOAT
		public Assignment getValuesAssignment_2_1() { return cValuesAssignment_2_1; }

		//FLOAT
		public RuleCall getValuesFLOATTerminalRuleCall_2_1_0() { return cValuesFLOATTerminalRuleCall_2_1_0; }
	}

	public class IntRangeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.grana.text.Grana.IntRange");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cIntRangeRangeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIntRangeValuesParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//IntRange:
		//	IntRangeRange | IntRangeValues;
		@Override public ParserRule getRule() { return rule; }

		//IntRangeRange | IntRangeValues
		public Alternatives getAlternatives() { return cAlternatives; }

		//IntRangeRange
		public RuleCall getIntRangeRangeParserRuleCall_0() { return cIntRangeRangeParserRuleCall_0; }

		//IntRangeValues
		public RuleCall getIntRangeValuesParserRuleCall_1() { return cIntRangeValuesParserRuleCall_1; }
	}

	public class IntRangeValuesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.grana.text.Grana.IntRangeValues");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIntvaluesKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cValuesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValuesSIGNED_INTTerminalRuleCall_1_0 = (RuleCall)cValuesAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cValuesAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cValuesSIGNED_INTTerminalRuleCall_2_1_0 = (RuleCall)cValuesAssignment_2_1.eContents().get(0);
		
		//IntRangeValues:
		//	'intvalues' values+=SIGNED_INT (',' values+=SIGNED_INT)*;
		@Override public ParserRule getRule() { return rule; }

		//'intvalues' values+=SIGNED_INT (',' values+=SIGNED_INT)*
		public Group getGroup() { return cGroup; }

		//'intvalues'
		public Keyword getIntvaluesKeyword_0() { return cIntvaluesKeyword_0; }

		//values+=SIGNED_INT
		public Assignment getValuesAssignment_1() { return cValuesAssignment_1; }

		//SIGNED_INT
		public RuleCall getValuesSIGNED_INTTerminalRuleCall_1_0() { return cValuesSIGNED_INTTerminalRuleCall_1_0; }

		//(',' values+=SIGNED_INT)*
		public Group getGroup_2() { return cGroup_2; }

		//','
		public Keyword getCommaKeyword_2_0() { return cCommaKeyword_2_0; }

		//values+=SIGNED_INT
		public Assignment getValuesAssignment_2_1() { return cValuesAssignment_2_1; }

		//SIGNED_INT
		public RuleCall getValuesSIGNED_INTTerminalRuleCall_2_1_0() { return cValuesSIGNED_INTTerminalRuleCall_2_1_0; }
	}

	public class IntRangeRangeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.grana.text.Grana.IntRangeRange");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIntrangeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cStartAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cStartSIGNED_INTTerminalRuleCall_1_0 = (RuleCall)cStartAssignment_1.eContents().get(0);
		private final Keyword cToKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cEndSIGNED_INTTerminalRuleCall_3_0 = (RuleCall)cEndAssignment_3.eContents().get(0);
		
		//IntRangeRange:
		//	'intrange' start=SIGNED_INT 'to' end=SIGNED_INT;
		@Override public ParserRule getRule() { return rule; }

		//'intrange' start=SIGNED_INT 'to' end=SIGNED_INT
		public Group getGroup() { return cGroup; }

		//'intrange'
		public Keyword getIntrangeKeyword_0() { return cIntrangeKeyword_0; }

		//start=SIGNED_INT
		public Assignment getStartAssignment_1() { return cStartAssignment_1; }

		//SIGNED_INT
		public RuleCall getStartSIGNED_INTTerminalRuleCall_1_0() { return cStartSIGNED_INTTerminalRuleCall_1_0; }

		//'to'
		public Keyword getToKeyword_2() { return cToKeyword_2; }

		//end=SIGNED_INT
		public Assignment getEndAssignment_3() { return cEndAssignment_3; }

		//SIGNED_INT
		public RuleCall getEndSIGNED_INTTerminalRuleCall_3_0() { return cEndSIGNED_INTTerminalRuleCall_3_0; }
	}

	public class EnumRangeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.grana.text.Grana.EnumRange");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEnumvaluesKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cValuesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValuesQualifiedIdValueParserRuleCall_1_0 = (RuleCall)cValuesAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cValuesAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cValuesQualifiedIdValueParserRuleCall_2_1_0 = (RuleCall)cValuesAssignment_2_1.eContents().get(0);
		
		//EnumRange:
		//	'enumvalues' values+=QualifiedIdValue (',' values+=QualifiedIdValue)*;
		@Override public ParserRule getRule() { return rule; }

		//'enumvalues' values+=QualifiedIdValue (',' values+=QualifiedIdValue)*
		public Group getGroup() { return cGroup; }

		//'enumvalues'
		public Keyword getEnumvaluesKeyword_0() { return cEnumvaluesKeyword_0; }

		//values+=QualifiedIdValue
		public Assignment getValuesAssignment_1() { return cValuesAssignment_1; }

		//QualifiedIdValue
		public RuleCall getValuesQualifiedIdValueParserRuleCall_1_0() { return cValuesQualifiedIdValueParserRuleCall_1_0; }

		//(',' values+=QualifiedIdValue)*
		public Group getGroup_2() { return cGroup_2; }

		//','
		public Keyword getCommaKeyword_2_0() { return cCommaKeyword_2_0; }

		//values+=QualifiedIdValue
		public Assignment getValuesAssignment_2_1() { return cValuesAssignment_2_1; }

		//QualifiedIdValue
		public RuleCall getValuesQualifiedIdValueParserRuleCall_2_1_0() { return cValuesQualifiedIdValueParserRuleCall_2_1_0; }
	}

	public class ResourceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.grana.text.Grana.Resource");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cResourceReferenceParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cLocalResourceParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		/// *
		// * ---- Resources ---- 
		// * / Resource:
		//	ResourceReference | LocalResource;
		@Override public ParserRule getRule() { return rule; }

		//ResourceReference | LocalResource
		public Alternatives getAlternatives() { return cAlternatives; }

		//ResourceReference
		public RuleCall getResourceReferenceParserRuleCall_0() { return cResourceReferenceParserRuleCall_0; }

		//LocalResource
		public RuleCall getLocalResourceParserRuleCall_1() { return cLocalResourceParserRuleCall_1; }
	}

	public class ResourceReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.grana.text.Grana.ResourceReference");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRefKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cResourceRefsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cResourceRefsGlobalResourceRefCrossReference_1_0 = (CrossReference)cResourceRefsAssignment_1.eContents().get(0);
		private final RuleCall cResourceRefsGlobalResourceRefIDTerminalRuleCall_1_0_1 = (RuleCall)cResourceRefsGlobalResourceRefCrossReference_1_0.eContents().get(1);
		
		//ResourceReference:
		//	'ref' resourceRefs+=[GlobalResourceRef]+;
		@Override public ParserRule getRule() { return rule; }

		//'ref' resourceRefs+=[GlobalResourceRef]+
		public Group getGroup() { return cGroup; }

		//'ref'
		public Keyword getRefKeyword_0() { return cRefKeyword_0; }

		//resourceRefs+=[GlobalResourceRef]+
		public Assignment getResourceRefsAssignment_1() { return cResourceRefsAssignment_1; }

		//[GlobalResourceRef]
		public CrossReference getResourceRefsGlobalResourceRefCrossReference_1_0() { return cResourceRefsGlobalResourceRefCrossReference_1_0; }

		//ID
		public RuleCall getResourceRefsGlobalResourceRefIDTerminalRuleCall_1_0_1() { return cResourceRefsGlobalResourceRefIDTerminalRuleCall_1_0_1; }
	}

	public class GlobalResourceRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.grana.text.Grana.GlobalResourceRef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Assignment cResourcesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cResourcesLocalResourceParserRuleCall_1_0 = (RuleCall)cResourcesAssignment_1.eContents().get(0);
		
		//GlobalResourceRef:
		//	name=ID resources+=LocalResource;
		@Override public ParserRule getRule() { return rule; }

		//name=ID resources+=LocalResource
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//resources+=LocalResource
		public Assignment getResourcesAssignment_1() { return cResourcesAssignment_1; }

		//LocalResource
		public RuleCall getResourcesLocalResourceParserRuleCall_1_0() { return cResourcesLocalResourceParserRuleCall_1_0; }
	}

	public class LocalResourceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.grana.text.Grana.LocalResource");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPathAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cPathSTRINGTerminalRuleCall_0_0 = (RuleCall)cPathAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFilterKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cFilterAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cFilterSTRINGTerminalRuleCall_1_1_0 = (RuleCall)cFilterAssignment_1_1.eContents().get(0);
		private final Assignment cRecurseAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cRecurseRecurseKeyword_2_0 = (Keyword)cRecurseAssignment_2.eContents().get(0);
		
		//LocalResource:
		//	path=STRING ('filter' filter=STRING) recurse?='recurse'?;
		@Override public ParserRule getRule() { return rule; }

		//path=STRING ('filter' filter=STRING) recurse?='recurse'?
		public Group getGroup() { return cGroup; }

		//path=STRING
		public Assignment getPathAssignment_0() { return cPathAssignment_0; }

		//STRING
		public RuleCall getPathSTRINGTerminalRuleCall_0_0() { return cPathSTRINGTerminalRuleCall_0_0; }

		//('filter' filter=STRING)
		public Group getGroup_1() { return cGroup_1; }

		//'filter'
		public Keyword getFilterKeyword_1_0() { return cFilterKeyword_1_0; }

		//filter=STRING
		public Assignment getFilterAssignment_1_1() { return cFilterAssignment_1_1; }

		//STRING
		public RuleCall getFilterSTRINGTerminalRuleCall_1_1_0() { return cFilterSTRINGTerminalRuleCall_1_1_0; }

		//recurse?='recurse'?
		public Assignment getRecurseAssignment_2() { return cRecurseAssignment_2; }

		//'recurse'
		public Keyword getRecurseRecurseKeyword_2_0() { return cRecurseRecurseKeyword_2_0; }
	}

	public class OutputElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.grana.text.Grana.Output");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cOutputReferenceParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cLocalOutputParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		/// *
		// * ---- Output ---- 
		// * / Output:
		//	OutputReference | LocalOutput;
		@Override public ParserRule getRule() { return rule; }

		//OutputReference | LocalOutput
		public Alternatives getAlternatives() { return cAlternatives; }

		//OutputReference
		public RuleCall getOutputReferenceParserRuleCall_0() { return cOutputReferenceParserRuleCall_0; }

		//LocalOutput
		public RuleCall getLocalOutputParserRuleCall_1() { return cLocalOutputParserRuleCall_1; }
	}

	public class GlobalOutputRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.grana.text.Grana.GlobalOutputRef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Assignment cOutputAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOutputLocalOutputParserRuleCall_1_0 = (RuleCall)cOutputAssignment_1.eContents().get(0);
		
		//GlobalOutputRef:
		//	name=ID output=LocalOutput;
		@Override public ParserRule getRule() { return rule; }

		//name=ID output=LocalOutput
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//output=LocalOutput
		public Assignment getOutputAssignment_1() { return cOutputAssignment_1; }

		//LocalOutput
		public RuleCall getOutputLocalOutputParserRuleCall_1_0() { return cOutputLocalOutputParserRuleCall_1_0; }
	}

	public class OutputReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.grana.text.Grana.OutputReference");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRefKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cOutputRefAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cOutputRefGlobalOutputRefCrossReference_1_0 = (CrossReference)cOutputRefAssignment_1.eContents().get(0);
		private final RuleCall cOutputRefGlobalOutputRefIDTerminalRuleCall_1_0_1 = (RuleCall)cOutputRefGlobalOutputRefCrossReference_1_0.eContents().get(1);
		
		//OutputReference:
		//	'ref' outputRef=[GlobalOutputRef];
		@Override public ParserRule getRule() { return rule; }

		//'ref' outputRef=[GlobalOutputRef]
		public Group getGroup() { return cGroup; }

		//'ref'
		public Keyword getRefKeyword_0() { return cRefKeyword_0; }

		//outputRef=[GlobalOutputRef]
		public Assignment getOutputRefAssignment_1() { return cOutputRefAssignment_1; }

		//[GlobalOutputRef]
		public CrossReference getOutputRefGlobalOutputRefCrossReference_1_0() { return cOutputRefGlobalOutputRefCrossReference_1_0; }

		//ID
		public RuleCall getOutputRefGlobalOutputRefIDTerminalRuleCall_1_0_1() { return cOutputRefGlobalOutputRefIDTerminalRuleCall_1_0_1; }
	}

	public class LocalOutputElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.grana.text.Grana.LocalOutput");
		private final Assignment cPathAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cPathSTRINGTerminalRuleCall_0 = (RuleCall)cPathAssignment.eContents().get(0);
		
		//LocalOutput:
		//	path=STRING;
		@Override public ParserRule getRule() { return rule; }

		//path=STRING
		public Assignment getPathAssignment() { return cPathAssignment; }

		//STRING
		public RuleCall getPathSTRINGTerminalRuleCall_0() { return cPathSTRINGTerminalRuleCall_0; }
	}

	public class AnalysisElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.grana.text.Grana.Analysis");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameQualifiedIdParserRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//Analysis:
		//	name=QualifiedId;
		@Override public ParserRule getRule() { return rule; }

		//name=QualifiedId
		public Assignment getNameAssignment() { return cNameAssignment; }

		//QualifiedId
		public RuleCall getNameQualifiedIdParserRuleCall_0() { return cNameQualifiedIdParserRuleCall_0; }
	}

	public class LayoutConfigElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.grana.text.Grana.LayoutConfig");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIdentifierAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cIdentifierIDTerminalRuleCall_0_0 = (RuleCall)cIdentifierAssignment_0.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cPropertiesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPropertiesPropertyParserRuleCall_2_0 = (RuleCall)cPropertiesAssignment_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//LayoutConfig ElkNode:
		//	identifier=ID '{'
		//	properties+=Property*
		//	'}'
		@Override public ParserRule getRule() { return rule; }

		//identifier=ID '{' properties+=Property* '}'
		public Group getGroup() { return cGroup; }

		//identifier=ID
		public Assignment getIdentifierAssignment_0() { return cIdentifierAssignment_0; }

		//ID
		public RuleCall getIdentifierIDTerminalRuleCall_0_0() { return cIdentifierIDTerminalRuleCall_0_0; }

		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//properties+=Property*
		public Assignment getPropertiesAssignment_2() { return cPropertiesAssignment_2; }

		//Property
		public RuleCall getPropertiesPropertyParserRuleCall_2_0() { return cPropertiesPropertyParserRuleCall_2_0; }

		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	
	
	public class OutputTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.grana.text.Grana.OutputType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cCsvEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cCsvCsvKeyword_0_0 = (Keyword)cCsvEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cJsonEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cJsonJsonKeyword_1_0 = (Keyword)cJsonEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum OutputType:
		//	csv | json // first literal is default
		//;
		public EnumRule getRule() { return rule; }

		//csv | json
		public Alternatives getAlternatives() { return cAlternatives; }

		//csv
		public EnumLiteralDeclaration getCsvEnumLiteralDeclaration_0() { return cCsvEnumLiteralDeclaration_0; }

		//"csv"
		public Keyword getCsvCsvKeyword_0_0() { return cCsvCsvKeyword_0_0; }

		//json
		public EnumLiteralDeclaration getJsonEnumLiteralDeclaration_1() { return cJsonEnumLiteralDeclaration_1; }

		//"json"
		public Keyword getJsonJsonKeyword_1_0() { return cJsonJsonKeyword_1_0; }
	}
	
	private final GranaElements pGrana;
	private final JobElements pJob;
	private final RegularJobElements pRegularJob;
	private final CompareJobElements pCompareJob;
	private final RangeJobElements pRangeJob;
	private final RangeElements pRange;
	private final FloatRangeElements pFloatRange;
	private final IntRangeElements pIntRange;
	private final IntRangeValuesElements pIntRangeValues;
	private final IntRangeRangeElements pIntRangeRange;
	private final EnumRangeElements pEnumRange;
	private final ResourceElements pResource;
	private final ResourceReferenceElements pResourceReference;
	private final GlobalResourceRefElements pGlobalResourceRef;
	private final LocalResourceElements pLocalResource;
	private final OutputElements pOutput;
	private final GlobalOutputRefElements pGlobalOutputRef;
	private final OutputReferenceElements pOutputReference;
	private final LocalOutputElements pLocalOutput;
	private final OutputTypeElements eOutputType;
	private final AnalysisElements pAnalysis;
	private final LayoutConfigElements pLayoutConfig;
	
	private final Grammar grammar;

	private final ElkGraphGrammarAccess gaElkGraph;

	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public GranaGrammarAccess(GrammarProvider grammarProvider,
		ElkGraphGrammarAccess gaElkGraph,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaElkGraph = gaElkGraph;
		this.gaTerminals = gaTerminals;
		this.pGrana = new GranaElements();
		this.pJob = new JobElements();
		this.pRegularJob = new RegularJobElements();
		this.pCompareJob = new CompareJobElements();
		this.pRangeJob = new RangeJobElements();
		this.pRange = new RangeElements();
		this.pFloatRange = new FloatRangeElements();
		this.pIntRange = new IntRangeElements();
		this.pIntRangeValues = new IntRangeValuesElements();
		this.pIntRangeRange = new IntRangeRangeElements();
		this.pEnumRange = new EnumRangeElements();
		this.pResource = new ResourceElements();
		this.pResourceReference = new ResourceReferenceElements();
		this.pGlobalResourceRef = new GlobalResourceRefElements();
		this.pLocalResource = new LocalResourceElements();
		this.pOutput = new OutputElements();
		this.pGlobalOutputRef = new GlobalOutputRefElements();
		this.pOutputReference = new OutputReferenceElements();
		this.pLocalOutput = new LocalOutputElements();
		this.eOutputType = new OutputTypeElements();
		this.pAnalysis = new AnalysisElements();
		this.pLayoutConfig = new LayoutConfigElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("de.cau.cs.kieler.grana.text.Grana".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	

	public ElkGraphGrammarAccess getElkGraphGrammarAccess() {
		return gaElkGraph;
	}

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Grana:
	//	('globalResources' globalResources+=GlobalResourceRef*)? ('globalOutputs' gloobalOutputs+=GlobalOutputRef*)?
	//	('execute' parallel?='parallel'? (executeAll?='all' | execute+=[Job]+)) jobs+=Job+;
	public GranaElements getGranaAccess() {
		return pGrana;
	}
	
	public ParserRule getGranaRule() {
		return getGranaAccess().getRule();
	}

	//Job:
	//	RegularJob | RangeJob | CompareJob;
	public JobElements getJobAccess() {
		return pJob;
	}
	
	public ParserRule getJobRule() {
		return getJobAccess().getRule();
	}

	//RegularJob:
	//	'job' name=ID layoutBeforeAnalysis?='layoutBeforeAnalysis'?
	//	measureExecutionTime?='measureExecutionTime'?
	//	'resources'
	//	resources+=Resource+
	//	'layoutoptions'
	//	layoutOptions+=LayoutConfig+
	//	'analyses'
	//	analyses+=Analysis+
	//	'output'
	//	outputType=OutputType? output=Output;
	public RegularJobElements getRegularJobAccess() {
		return pRegularJob;
	}
	
	public ParserRule getRegularJobRule() {
		return getRegularJobAccess().getRule();
	}

	//CompareJob:
	//	'comparejob' name=ID
	//	'resources' resources+=Resource+
	//	'layoutoptions'
	//	layoutOptions+=LayoutConfig layoutOptions+=LayoutConfig 'analyses'
	//	analyses+=Analysis+
	//	'output'
	//	outputType=OutputType? output=Output;
	public CompareJobElements getCompareJobAccess() {
		return pCompareJob;
	}
	
	public ParserRule getCompareJobRule() {
		return getCompareJobAccess().getRule();
	}

	//RangeJob:
	//	'rangejob' name=ID
	//	measureExecutionTime?='measureExecutionTime'?
	//	'resources' resources+=Resource+
	//	'layoutoptions'
	//	layoutOptions+=LayoutConfig+
	//	'analyses'
	//	analyses+=Analysis+
	//	'rangeoption'
	//	rangeOption=QualifiedId
	//	rangeValues=Range ('rangeanalysis'
	//	rangeAnalysis=Analysis ('component' rangeAnalysisComponent=SIGNED_INT)? |
	//	'rangeanalyses'
	//	rangeAnalyses+=Analysis+)
	//	'output'
	//	outputType=OutputType? output=Output;
	public RangeJobElements getRangeJobAccess() {
		return pRangeJob;
	}
	
	public ParserRule getRangeJobRule() {
		return getRangeJobAccess().getRule();
	}

	//Range:
	//	FloatRange | IntRange | EnumRange;
	public RangeElements getRangeAccess() {
		return pRange;
	}
	
	public ParserRule getRangeRule() {
		return getRangeAccess().getRule();
	}

	//FloatRange:
	//	'floatvalues' values+=FLOAT (',' values+=FLOAT)*;
	public FloatRangeElements getFloatRangeAccess() {
		return pFloatRange;
	}
	
	public ParserRule getFloatRangeRule() {
		return getFloatRangeAccess().getRule();
	}

	//IntRange:
	//	IntRangeRange | IntRangeValues;
	public IntRangeElements getIntRangeAccess() {
		return pIntRange;
	}
	
	public ParserRule getIntRangeRule() {
		return getIntRangeAccess().getRule();
	}

	//IntRangeValues:
	//	'intvalues' values+=SIGNED_INT (',' values+=SIGNED_INT)*;
	public IntRangeValuesElements getIntRangeValuesAccess() {
		return pIntRangeValues;
	}
	
	public ParserRule getIntRangeValuesRule() {
		return getIntRangeValuesAccess().getRule();
	}

	//IntRangeRange:
	//	'intrange' start=SIGNED_INT 'to' end=SIGNED_INT;
	public IntRangeRangeElements getIntRangeRangeAccess() {
		return pIntRangeRange;
	}
	
	public ParserRule getIntRangeRangeRule() {
		return getIntRangeRangeAccess().getRule();
	}

	//EnumRange:
	//	'enumvalues' values+=QualifiedIdValue (',' values+=QualifiedIdValue)*;
	public EnumRangeElements getEnumRangeAccess() {
		return pEnumRange;
	}
	
	public ParserRule getEnumRangeRule() {
		return getEnumRangeAccess().getRule();
	}

	/// *
	// * ---- Resources ---- 
	// * / Resource:
	//	ResourceReference | LocalResource;
	public ResourceElements getResourceAccess() {
		return pResource;
	}
	
	public ParserRule getResourceRule() {
		return getResourceAccess().getRule();
	}

	//ResourceReference:
	//	'ref' resourceRefs+=[GlobalResourceRef]+;
	public ResourceReferenceElements getResourceReferenceAccess() {
		return pResourceReference;
	}
	
	public ParserRule getResourceReferenceRule() {
		return getResourceReferenceAccess().getRule();
	}

	//GlobalResourceRef:
	//	name=ID resources+=LocalResource;
	public GlobalResourceRefElements getGlobalResourceRefAccess() {
		return pGlobalResourceRef;
	}
	
	public ParserRule getGlobalResourceRefRule() {
		return getGlobalResourceRefAccess().getRule();
	}

	//LocalResource:
	//	path=STRING ('filter' filter=STRING) recurse?='recurse'?;
	public LocalResourceElements getLocalResourceAccess() {
		return pLocalResource;
	}
	
	public ParserRule getLocalResourceRule() {
		return getLocalResourceAccess().getRule();
	}

	/// *
	// * ---- Output ---- 
	// * / Output:
	//	OutputReference | LocalOutput;
	public OutputElements getOutputAccess() {
		return pOutput;
	}
	
	public ParserRule getOutputRule() {
		return getOutputAccess().getRule();
	}

	//GlobalOutputRef:
	//	name=ID output=LocalOutput;
	public GlobalOutputRefElements getGlobalOutputRefAccess() {
		return pGlobalOutputRef;
	}
	
	public ParserRule getGlobalOutputRefRule() {
		return getGlobalOutputRefAccess().getRule();
	}

	//OutputReference:
	//	'ref' outputRef=[GlobalOutputRef];
	public OutputReferenceElements getOutputReferenceAccess() {
		return pOutputReference;
	}
	
	public ParserRule getOutputReferenceRule() {
		return getOutputReferenceAccess().getRule();
	}

	//LocalOutput:
	//	path=STRING;
	public LocalOutputElements getLocalOutputAccess() {
		return pLocalOutput;
	}
	
	public ParserRule getLocalOutputRule() {
		return getLocalOutputAccess().getRule();
	}

	//enum OutputType:
	//	csv | json // first literal is default
	//;
	public OutputTypeElements getOutputTypeAccess() {
		return eOutputType;
	}
	
	public EnumRule getOutputTypeRule() {
		return getOutputTypeAccess().getRule();
	}

	//Analysis:
	//	name=QualifiedId;
	public AnalysisElements getAnalysisAccess() {
		return pAnalysis;
	}
	
	public ParserRule getAnalysisRule() {
		return getAnalysisAccess().getRule();
	}

	//LayoutConfig ElkNode:
	//	identifier=ID '{'
	//	properties+=Property*
	//	'}'
	public LayoutConfigElements getLayoutConfigAccess() {
		return pLayoutConfig;
	}
	
	public ParserRule getLayoutConfigRule() {
		return getLayoutConfigAccess().getRule();
	}

	//RootNode ElkNode:
	//	{ElkNode} ('graph' identifier=ID)?
	//	properties+=Property* (labels+=ElkLabel | ports+=ElkPort | children+=ElkNode | containedEdges+=ElkEdge)*
	public ElkGraphGrammarAccess.RootNodeElements getRootNodeAccess() {
		return gaElkGraph.getRootNodeAccess();
	}
	
	public ParserRule getRootNodeRule() {
		return getRootNodeAccess().getRule();
	}

	//ElkNode:
	//	'node' identifier=ID ('{'
	//	ShapeLayout?
	//	properties+=Property* (labels+=ElkLabel | ports+=ElkPort | children+=ElkNode | containedEdges+=ElkEdge)*
	//	'}')?;
	public ElkGraphGrammarAccess.ElkNodeElements getElkNodeAccess() {
		return gaElkGraph.getElkNodeAccess();
	}
	
	public ParserRule getElkNodeRule() {
		return getElkNodeAccess().getRule();
	}

	//ElkLabel:
	//	'label' (identifier=ID ':')? text=STRING ('{'
	//	ShapeLayout?
	//	properties+=Property*
	//	labels+=ElkLabel*
	//	'}')?;
	public ElkGraphGrammarAccess.ElkLabelElements getElkLabelAccess() {
		return gaElkGraph.getElkLabelAccess();
	}
	
	public ParserRule getElkLabelRule() {
		return getElkLabelAccess().getRule();
	}

	//ElkPort:
	//	'port' identifier=ID ('{'
	//	ShapeLayout?
	//	properties+=Property*
	//	labels+=ElkLabel*
	//	'}')?;
	public ElkGraphGrammarAccess.ElkPortElements getElkPortAccess() {
		return gaElkGraph.getElkPortAccess();
	}
	
	public ParserRule getElkPortRule() {
		return getElkPortAccess().getRule();
	}

	//fragment ShapeLayout returns ElkShape:
	//	'layout' '[' (('position' ':' x=Number ',' y=Number)?
	//	& ('size' ':' width=Number ',' height=Number)?) ']';
	public ElkGraphGrammarAccess.ShapeLayoutElements getShapeLayoutAccess() {
		return gaElkGraph.getShapeLayoutAccess();
	}
	
	public ParserRule getShapeLayoutRule() {
		return getShapeLayoutAccess().getRule();
	}

	/// * SuppressWarnings[BidirectionalReference] * / ElkEdge:
	//	'edge' (identifier=ID ':')?
	//	sources+=[ElkConnectableShape|QualifiedId] (',' sources+=[ElkConnectableShape|QualifiedId])* '->'
	//	targets+=[ElkConnectableShape|QualifiedId] (',' targets+=[ElkConnectableShape|QualifiedId])* ('{'
	//	EdgeLayout?
	//	properties+=Property*
	//	labels+=ElkLabel*
	//	'}')?;
	public ElkGraphGrammarAccess.ElkEdgeElements getElkEdgeAccess() {
		return gaElkGraph.getElkEdgeAccess();
	}
	
	public ParserRule getElkEdgeRule() {
		return getElkEdgeAccess().getRule();
	}

	//fragment EdgeLayout returns ElkEdge:
	//	'layout' '[' (sections+=ElkSingleEdgeSection | sections+=ElkEdgeSection+) ']';
	public ElkGraphGrammarAccess.EdgeLayoutElements getEdgeLayoutAccess() {
		return gaElkGraph.getEdgeLayoutAccess();
	}
	
	public ParserRule getEdgeLayoutRule() {
		return getEdgeLayoutAccess().getRule();
	}

	//ElkSingleEdgeSection ElkEdgeSection:
	//	{ElkEdgeSection} ((('incoming' ':' incomingShape=[ElkConnectableShape|QualifiedId])?
	//	& ('outgoing' ':' outgoingShape=[ElkConnectableShape|QualifiedId])?
	//	& ('start' ':' startX=Number ',' startY=Number)?
	//	& ('end' ':' endX=Number ',' endY=Number)?) ('bends' ':' bendPoints+=ElkBendPoint ('|' bendPoints+=ElkBendPoint)*)?
	//	properties+=Property*)
	public ElkGraphGrammarAccess.ElkSingleEdgeSectionElements getElkSingleEdgeSectionAccess() {
		return gaElkGraph.getElkSingleEdgeSectionAccess();
	}
	
	public ParserRule getElkSingleEdgeSectionRule() {
		return getElkSingleEdgeSectionAccess().getRule();
	}

	/// * SuppressWarnings[BidirectionalReference] * / ElkEdgeSection:
	//	'section' identifier=ID ('->' outgoingSections+=[ElkEdgeSection] (',' outgoingSections+=[ElkEdgeSection])*)? '['
	//	((('incoming' ':' incomingShape=[ElkConnectableShape|QualifiedId])?
	//	& ('outgoing' ':' outgoingShape=[ElkConnectableShape|QualifiedId])?
	//	& ('start' ':' startX=Number ',' startY=Number)?
	//	& ('end' ':' endX=Number ',' endY=Number)?) ('bends' ':' bendPoints+=ElkBendPoint ('|' bendPoints+=ElkBendPoint)*)?
	//	properties+=Property*) ']';
	public ElkGraphGrammarAccess.ElkEdgeSectionElements getElkEdgeSectionAccess() {
		return gaElkGraph.getElkEdgeSectionAccess();
	}
	
	public ParserRule getElkEdgeSectionRule() {
		return getElkEdgeSectionAccess().getRule();
	}

	//ElkBendPoint:
	//	x=Number ',' y=Number;
	public ElkGraphGrammarAccess.ElkBendPointElements getElkBendPointAccess() {
		return gaElkGraph.getElkBendPointAccess();
	}
	
	public ParserRule getElkBendPointRule() {
		return getElkBendPointAccess().getRule();
	}

	//QualifiedId:
	//	ID ('.' ID)*;
	public ElkGraphGrammarAccess.QualifiedIdElements getQualifiedIdAccess() {
		return gaElkGraph.getQualifiedIdAccess();
	}
	
	public ParserRule getQualifiedIdRule() {
		return getQualifiedIdAccess().getRule();
	}

	//Number ecore::EDouble:
	//	SIGNED_INT | FLOAT
	public ElkGraphGrammarAccess.NumberElements getNumberAccess() {
		return gaElkGraph.getNumberAccess();
	}
	
	public ParserRule getNumberRule() {
		return getNumberAccess().getRule();
	}

	//Property ElkPropertyToValueMapEntry:
	//	key=PropertyKey ':' (value=StringValue | value=QualifiedIdValue | value=NumberValue | value=BooleanValue)
	public ElkGraphGrammarAccess.PropertyElements getPropertyAccess() {
		return gaElkGraph.getPropertyAccess();
	}
	
	public ParserRule getPropertyRule() {
		return getPropertyAccess().getRule();
	}

	//PropertyKey IProperty hidden():
	//	ID ('.' ID)*
	public ElkGraphGrammarAccess.PropertyKeyElements getPropertyKeyAccess() {
		return gaElkGraph.getPropertyKeyAccess();
	}
	
	public ParserRule getPropertyKeyRule() {
		return getPropertyKeyAccess().getRule();
	}

	//StringValue ecore::EJavaObject:
	//	STRING
	public ElkGraphGrammarAccess.StringValueElements getStringValueAccess() {
		return gaElkGraph.getStringValueAccess();
	}
	
	public ParserRule getStringValueRule() {
		return getStringValueAccess().getRule();
	}

	//QualifiedIdValue ecore::EJavaObject:
	//	QualifiedId
	public ElkGraphGrammarAccess.QualifiedIdValueElements getQualifiedIdValueAccess() {
		return gaElkGraph.getQualifiedIdValueAccess();
	}
	
	public ParserRule getQualifiedIdValueRule() {
		return getQualifiedIdValueAccess().getRule();
	}

	//NumberValue ecore::EJavaObject:
	//	SIGNED_INT | FLOAT
	public ElkGraphGrammarAccess.NumberValueElements getNumberValueAccess() {
		return gaElkGraph.getNumberValueAccess();
	}
	
	public ParserRule getNumberValueRule() {
		return getNumberValueAccess().getRule();
	}

	//BooleanValue ecore::EJavaObject:
	//	'true' | 'false'
	public ElkGraphGrammarAccess.BooleanValueElements getBooleanValueAccess() {
		return gaElkGraph.getBooleanValueAccess();
	}
	
	public ParserRule getBooleanValueRule() {
		return getBooleanValueAccess().getRule();
	}

	//terminal SIGNED_INT returns ecore::EInt:
	//	('+' | '-')? INT;
	public TerminalRule getSIGNED_INTRule() {
		return gaElkGraph.getSIGNED_INTRule();
	} 

	//terminal FLOAT returns ecore::EDouble:
	//	('+' | '-')? (INT '.' INT | INT ('.' INT)? ('e' | 'E') ('+' | '-')? INT);
	public TerminalRule getFLOATRule() {
		return gaElkGraph.getFLOATRule();
	} 

	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' | "'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	'/ *'->'* /';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
