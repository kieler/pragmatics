/*
 * generated by Xtext
 */
package de.cau.cs.kieler.kiml.grana.text.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import de.cau.cs.kieler.kiml.grana.text.services.GranaGrammarAccess;

public class GranaParser extends AbstractContentAssistParser {
	
	@Inject
	private GranaGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected de.cau.cs.kieler.kiml.grana.text.ui.contentassist.antlr.internal.InternalGranaParser createParser() {
		de.cau.cs.kieler.kiml.grana.text.ui.contentassist.antlr.internal.InternalGranaParser result = new de.cau.cs.kieler.kiml.grana.text.ui.contentassist.antlr.internal.InternalGranaParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getGranaAccess().getAlternatives_2_2(), "rule__Grana__Alternatives_2_2");
					put(grammarAccess.getJobAccess().getAlternatives(), "rule__Job__Alternatives");
					put(grammarAccess.getRangeJobAccess().getAlternatives_12(), "rule__RangeJob__Alternatives_12");
					put(grammarAccess.getRangeAccess().getAlternatives(), "rule__Range__Alternatives");
					put(grammarAccess.getIntRangeAccess().getAlternatives(), "rule__IntRange__Alternatives");
					put(grammarAccess.getResourceAccess().getAlternatives(), "rule__Resource__Alternatives");
					put(grammarAccess.getOutputAccess().getAlternatives(), "rule__Output__Alternatives");
					put(grammarAccess.getPropertyValueAccess().getAlternatives(), "rule__PropertyValue__Alternatives");
					put(grammarAccess.getFloatAccess().getAlternatives(), "rule__Float__Alternatives");
					put(grammarAccess.getOutputTypeAccess().getAlternatives(), "rule__OutputType__Alternatives");
					put(grammarAccess.getGranaAccess().getGroup(), "rule__Grana__Group__0");
					put(grammarAccess.getGranaAccess().getGroup_0(), "rule__Grana__Group_0__0");
					put(grammarAccess.getGranaAccess().getGroup_1(), "rule__Grana__Group_1__0");
					put(grammarAccess.getGranaAccess().getGroup_2(), "rule__Grana__Group_2__0");
					put(grammarAccess.getRegularJobAccess().getGroup(), "rule__RegularJob__Group__0");
					put(grammarAccess.getCompareJobAccess().getGroup(), "rule__CompareJob__Group__0");
					put(grammarAccess.getRangeJobAccess().getGroup(), "rule__RangeJob__Group__0");
					put(grammarAccess.getRangeJobAccess().getGroup_12_0(), "rule__RangeJob__Group_12_0__0");
					put(grammarAccess.getRangeJobAccess().getGroup_12_0_2(), "rule__RangeJob__Group_12_0_2__0");
					put(grammarAccess.getRangeJobAccess().getGroup_12_1(), "rule__RangeJob__Group_12_1__0");
					put(grammarAccess.getFloatRangeAccess().getGroup(), "rule__FloatRange__Group__0");
					put(grammarAccess.getFloatRangeAccess().getGroup_2(), "rule__FloatRange__Group_2__0");
					put(grammarAccess.getIntRangeValuesAccess().getGroup(), "rule__IntRangeValues__Group__0");
					put(grammarAccess.getIntRangeValuesAccess().getGroup_2(), "rule__IntRangeValues__Group_2__0");
					put(grammarAccess.getIntRangeRangeAccess().getGroup(), "rule__IntRangeRange__Group__0");
					put(grammarAccess.getResourceReferenceAccess().getGroup(), "rule__ResourceReference__Group__0");
					put(grammarAccess.getGlobalResourceRefAccess().getGroup(), "rule__GlobalResourceRef__Group__0");
					put(grammarAccess.getLocalResourceAccess().getGroup(), "rule__LocalResource__Group__0");
					put(grammarAccess.getLocalResourceAccess().getGroup_1(), "rule__LocalResource__Group_1__0");
					put(grammarAccess.getGlobalOutputRefAccess().getGroup(), "rule__GlobalOutputRef__Group__0");
					put(grammarAccess.getOutputReferenceAccess().getGroup(), "rule__OutputReference__Group__0");
					put(grammarAccess.getKIdentifierAccess().getGroup(), "rule__KIdentifier__Group__0");
					put(grammarAccess.getKIdentifierAccess().getGroup_3(), "rule__KIdentifier__Group_3__0");
					put(grammarAccess.getPersistentEntryAccess().getGroup(), "rule__PersistentEntry__Group__0");
					put(grammarAccess.getQualifiedIDAccess().getGroup(), "rule__QualifiedID__Group__0");
					put(grammarAccess.getQualifiedIDAccess().getGroup_1(), "rule__QualifiedID__Group_1__0");
					put(grammarAccess.getGranaAccess().getGlobalResourcesAssignment_0_1(), "rule__Grana__GlobalResourcesAssignment_0_1");
					put(grammarAccess.getGranaAccess().getGloobalOutputsAssignment_1_1(), "rule__Grana__GloobalOutputsAssignment_1_1");
					put(grammarAccess.getGranaAccess().getParallelAssignment_2_1(), "rule__Grana__ParallelAssignment_2_1");
					put(grammarAccess.getGranaAccess().getExecuteAllAssignment_2_2_0(), "rule__Grana__ExecuteAllAssignment_2_2_0");
					put(grammarAccess.getGranaAccess().getExecuteAssignment_2_2_1(), "rule__Grana__ExecuteAssignment_2_2_1");
					put(grammarAccess.getGranaAccess().getJobsAssignment_3(), "rule__Grana__JobsAssignment_3");
					put(grammarAccess.getRegularJobAccess().getNameAssignment_1(), "rule__RegularJob__NameAssignment_1");
					put(grammarAccess.getRegularJobAccess().getLayoutBeforeAnalysisAssignment_2(), "rule__RegularJob__LayoutBeforeAnalysisAssignment_2");
					put(grammarAccess.getRegularJobAccess().getMeasureExecutionTimeAssignment_3(), "rule__RegularJob__MeasureExecutionTimeAssignment_3");
					put(grammarAccess.getRegularJobAccess().getResourcesAssignment_5(), "rule__RegularJob__ResourcesAssignment_5");
					put(grammarAccess.getRegularJobAccess().getLayoutOptionsAssignment_7(), "rule__RegularJob__LayoutOptionsAssignment_7");
					put(grammarAccess.getRegularJobAccess().getAnalysesAssignment_9(), "rule__RegularJob__AnalysesAssignment_9");
					put(grammarAccess.getRegularJobAccess().getOutputTypeAssignment_11(), "rule__RegularJob__OutputTypeAssignment_11");
					put(grammarAccess.getRegularJobAccess().getOutputAssignment_12(), "rule__RegularJob__OutputAssignment_12");
					put(grammarAccess.getCompareJobAccess().getNameAssignment_1(), "rule__CompareJob__NameAssignment_1");
					put(grammarAccess.getCompareJobAccess().getResourcesAssignment_3(), "rule__CompareJob__ResourcesAssignment_3");
					put(grammarAccess.getCompareJobAccess().getLayoutOptionsAssignment_5(), "rule__CompareJob__LayoutOptionsAssignment_5");
					put(grammarAccess.getCompareJobAccess().getLayoutOptionsAssignment_6(), "rule__CompareJob__LayoutOptionsAssignment_6");
					put(grammarAccess.getCompareJobAccess().getAnalysesAssignment_8(), "rule__CompareJob__AnalysesAssignment_8");
					put(grammarAccess.getCompareJobAccess().getOutputTypeAssignment_10(), "rule__CompareJob__OutputTypeAssignment_10");
					put(grammarAccess.getCompareJobAccess().getOutputAssignment_11(), "rule__CompareJob__OutputAssignment_11");
					put(grammarAccess.getRangeJobAccess().getNameAssignment_1(), "rule__RangeJob__NameAssignment_1");
					put(grammarAccess.getRangeJobAccess().getMeasureExecutionTimeAssignment_2(), "rule__RangeJob__MeasureExecutionTimeAssignment_2");
					put(grammarAccess.getRangeJobAccess().getResourcesAssignment_4(), "rule__RangeJob__ResourcesAssignment_4");
					put(grammarAccess.getRangeJobAccess().getLayoutOptionsAssignment_6(), "rule__RangeJob__LayoutOptionsAssignment_6");
					put(grammarAccess.getRangeJobAccess().getAnalysesAssignment_8(), "rule__RangeJob__AnalysesAssignment_8");
					put(grammarAccess.getRangeJobAccess().getRangeOptionAssignment_10(), "rule__RangeJob__RangeOptionAssignment_10");
					put(grammarAccess.getRangeJobAccess().getRangeValuesAssignment_11(), "rule__RangeJob__RangeValuesAssignment_11");
					put(grammarAccess.getRangeJobAccess().getRangeAnalysisAssignment_12_0_1(), "rule__RangeJob__RangeAnalysisAssignment_12_0_1");
					put(grammarAccess.getRangeJobAccess().getRangeAnalysisComponentAssignment_12_0_2_1(), "rule__RangeJob__RangeAnalysisComponentAssignment_12_0_2_1");
					put(grammarAccess.getRangeJobAccess().getRangeAnalysesAssignment_12_1_1(), "rule__RangeJob__RangeAnalysesAssignment_12_1_1");
					put(grammarAccess.getRangeJobAccess().getOutputTypeAssignment_14(), "rule__RangeJob__OutputTypeAssignment_14");
					put(grammarAccess.getRangeJobAccess().getOutputAssignment_15(), "rule__RangeJob__OutputAssignment_15");
					put(grammarAccess.getFloatRangeAccess().getValuesAssignment_1(), "rule__FloatRange__ValuesAssignment_1");
					put(grammarAccess.getFloatRangeAccess().getValuesAssignment_2_1(), "rule__FloatRange__ValuesAssignment_2_1");
					put(grammarAccess.getIntRangeValuesAccess().getValuesAssignment_1(), "rule__IntRangeValues__ValuesAssignment_1");
					put(grammarAccess.getIntRangeValuesAccess().getValuesAssignment_2_1(), "rule__IntRangeValues__ValuesAssignment_2_1");
					put(grammarAccess.getIntRangeRangeAccess().getStartAssignment_1(), "rule__IntRangeRange__StartAssignment_1");
					put(grammarAccess.getIntRangeRangeAccess().getEndAssignment_3(), "rule__IntRangeRange__EndAssignment_3");
					put(grammarAccess.getResourceReferenceAccess().getResourceRefsAssignment_1(), "rule__ResourceReference__ResourceRefsAssignment_1");
					put(grammarAccess.getGlobalResourceRefAccess().getNameAssignment_0(), "rule__GlobalResourceRef__NameAssignment_0");
					put(grammarAccess.getGlobalResourceRefAccess().getResourcesAssignment_1(), "rule__GlobalResourceRef__ResourcesAssignment_1");
					put(grammarAccess.getLocalResourceAccess().getPathAssignment_0(), "rule__LocalResource__PathAssignment_0");
					put(grammarAccess.getLocalResourceAccess().getFilterAssignment_1_1(), "rule__LocalResource__FilterAssignment_1_1");
					put(grammarAccess.getGlobalOutputRefAccess().getNameAssignment_0(), "rule__GlobalOutputRef__NameAssignment_0");
					put(grammarAccess.getGlobalOutputRefAccess().getOutputAssignment_1(), "rule__GlobalOutputRef__OutputAssignment_1");
					put(grammarAccess.getOutputReferenceAccess().getOutputRefAssignment_1(), "rule__OutputReference__OutputRefAssignment_1");
					put(grammarAccess.getLocalOutputAccess().getPathAssignment(), "rule__LocalOutput__PathAssignment");
					put(grammarAccess.getAnalysisAccess().getNameAssignment(), "rule__Analysis__NameAssignment");
					put(grammarAccess.getKIdentifierAccess().getIdAssignment_1(), "rule__KIdentifier__IdAssignment_1");
					put(grammarAccess.getKIdentifierAccess().getPersistentEntriesAssignment_3_0(), "rule__KIdentifier__PersistentEntriesAssignment_3_0");
					put(grammarAccess.getKIdentifierAccess().getPersistentEntriesAssignment_3_1(), "rule__KIdentifier__PersistentEntriesAssignment_3_1");
					put(grammarAccess.getPersistentEntryAccess().getKeyAssignment_0(), "rule__PersistentEntry__KeyAssignment_0");
					put(grammarAccess.getPersistentEntryAccess().getValueAssignment_2(), "rule__PersistentEntry__ValueAssignment_2");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			de.cau.cs.kieler.kiml.grana.text.ui.contentassist.antlr.internal.InternalGranaParser typedParser = (de.cau.cs.kieler.kiml.grana.text.ui.contentassist.antlr.internal.InternalGranaParser) parser;
			typedParser.entryRuleGrana();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public GranaGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(GranaGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
