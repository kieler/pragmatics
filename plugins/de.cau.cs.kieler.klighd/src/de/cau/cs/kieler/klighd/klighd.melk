package de.cau.cs.kieler.klighd

import de.cau.cs.kieler.klighd.util.ExpansionAwareLayoutOption.ExpansionAwareLayoutOptionData
import org.eclipse.elk.core.math.KVector
import de.cau.cs.kieler.klighd.krendering.KRendering
import org.eclipse.swt.graphics.RGB
import de.cau.cs.kieler.klighd.^labels.LabelManagementResult

bundle {
    label "Klighd"
    metadataClass KlighdOptions 
    idPrefix de.cau.cs.kieler.klighd 
}

option tooltip: String {
    label "Tooltip"
    default = null
    targets nodes
    legacyIds klighd.tooltip
}

programmatic option expansionAwareLayoutOption: ExpansionAwareLayoutOptionData {
    label "Expansion Aware Options"
    description "Compound option containing pairs of layout option definitions for the collapsed and expanded state of a KNode"
    targets parents
}

programmatic option minimalNodeSize: KVector {
    label "Minimal Node Size"
    targets nodes 
}

programmatic option viewer: IViewer {
    label "Klighd Viewer"
    legacyIds klighd.viewer
    targets parents
}

programmatic option kRendering: KRendering {
    label "KlighD KRendering"
    targets edges,labels,nodes,ports
}

group svgExport {
    programmatic option transparentBackground: boolean {
        label "Transparent SVG Background"
        description "Whether the background should be left transparent or not"
        default = false
        targets parents
    }
    
    programmatic option backgroundColor: RGB {
        label "Background Color"
        description "Color of the background if not transparent"
        default = KlighdConstants.WHITE
        targets parents
        requires transparentBackground == false
    }
}

group ^labels {
    advanced option elementInFocus : boolean {
        label "Element in Focus"
        description
            "Whether an element is in the focus rather than in the context. Can be used by label managers
            to decide whether (and how much) to shorten labels."
        default = false
        targets parents,nodes,ports,labels
    }
    
    output option managementResult : LabelManagementResult {
        label "Label Management Result"
        description
            "Output option that indicates how a given label was or was not affected by
            label management during automatic layout."
        default = LabelManagementResult.UNMANAGED
        targets labels
    }

    output option textOverride : String {
        label "Label Text Override"
        description
            "Output option that, if set, replaces the original label text."
        default = null
        targets labels
    }
}
