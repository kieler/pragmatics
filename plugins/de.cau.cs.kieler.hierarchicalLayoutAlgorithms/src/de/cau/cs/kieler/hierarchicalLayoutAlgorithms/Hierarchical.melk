package de.cau.cs.kieler.hierarchicalLayoutAlgorithms

import de.cau.cs.kieler.hierarchicalLayoutAlgorithms.radial.HierarchicalRadialLayoutProvider

bundle {
    label "Hierarchical Layout Algorithms"
    metadataClass HierarchicalMetaDataProvider
}
algorithm radial(HierarchicalRadialLayoutProvider) {
    label "Radial Layouter"
    metadataClass RadialOptions
    description "A radial layouter"
}

algorithm grid(GridSnapLayoutProvider) {
    label "Grid Snap Layouter"
    metadataClass GridOptions
    description "Layouter that uses a force based algorithm and places the nodes in a grid afterwards."
}

algorithm stress(HierarchicalStressLayoutProvider) {
    label "Hierarchical Stress Layouter"
    metadataClass HierarchicalStressOptions
    description "A hierarchical stress layouter."
    supports desiredEdgeLength
}

algorithm tree(HierarchicalTreeLayoutProvider) {
    label "Hierarchical Tree Layouter"
    metadataClass HierarchicalTreeOptions
    description "A hierarchical two-dimension tree layouter."
}

option desiredEdgeLength: double {
    label "Desired Edge Length"
    description 
        "Specifies the length an edge or all edges should have, if possible."
    default = 100.0
    targets edges, parents
}