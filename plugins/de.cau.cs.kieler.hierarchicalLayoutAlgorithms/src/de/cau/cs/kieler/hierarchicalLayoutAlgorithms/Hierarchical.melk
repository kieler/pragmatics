package de.cau.cs.kieler.hierarchicalLayoutAlgorithms

import de.cau.cs.kieler.hierarchicalLayoutAlgorithms.radial.RadialLayoutProvider

bundle {
    label "Hierarchical Layout Algorithms"
    metadataClass HierarchicalMetaDataProvider
}
algorithm radial(RadialLayoutProvider) {
    label "Radial Layouter"
    metadataClass RadialOptions
    description "A radial layouter"
    supports hierarchicalID
    supports radius
}

algorithm grid(GridSnapLayoutProvider) {
    label "Grid Snap Layouter"
    metadataClass GridOptions
    description "Layouter that uses a force based algorithm and places the nodes in a grid afterwards."
}

algorithm custom(CustomLayoutProvider) {
    label "Custom Layouter"
    metadataClass CustomOptions
    description "A custom layouter, not implemented yet."
}


algorithm stress(HierarchicalStressLayoutProvider) {
    label "Stress Layouter"
    metadataClass HierarchicalStressOptions
    description "A hierarchical stress layouter."
}

algorithm tree(HierarchicalTreeLayoutProvider) {
    label "Tree Layouter"
    metadataClass HierarchicalTreeOptions
    description "A tree layouter."
}

/////////////////////////////////Options///////////////////////////////

programmatic option hierarchicalID:int{
    label "Hierarchical ID "
    targets parents
}

programmatic option hierarchicalParentID:int{
    label "Hierarchical Parent ID "
    targets parents
}

option radius: double {
    label "Radius"
    description "Change the radius for the radial layouter."
    default=0.0
    targets parents
} 
 

