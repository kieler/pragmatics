/*
 * generated by Xtext
 */
grammar InternalGrana;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package de.cau.cs.kieler.kiml.grana.text.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package de.cau.cs.kieler.kiml.grana.text.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import de.cau.cs.kieler.kiml.grana.text.services.GranaGrammarAccess;

}

@parser::members {

 	private GranaGrammarAccess grammarAccess;
 	
    public InternalGranaParser(TokenStream input, GranaGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Grana";	
   	}
   	
   	@Override
   	protected GranaGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleGrana
entryRuleGrana returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGranaRule()); }
	 iv_ruleGrana=ruleGrana 
	 { $current=$iv_ruleGrana.current; } 
	 EOF 
;

// Rule Grana
ruleGrana returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='globalResources' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getGranaAccess().getGlobalResourcesKeyword_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGranaAccess().getGlobalResourcesGlobalResourceRefParserRuleCall_0_1_0()); 
	    }
		lv_globalResources_1_0=ruleGlobalResourceRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGranaRule());
	        }
       		add(
       			$current, 
       			"globalResources",
        		lv_globalResources_1_0, 
        		"de.cau.cs.kieler.kiml.grana.text.Grana.GlobalResourceRef");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?(	otherlv_2='globalOutputs' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getGranaAccess().getGlobalOutputsKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGranaAccess().getGloobalOutputsGlobalOutputRefParserRuleCall_1_1_0()); 
	    }
		lv_gloobalOutputs_3_0=ruleGlobalOutputRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGranaRule());
	        }
       		add(
       			$current, 
       			"gloobalOutputs",
        		lv_gloobalOutputs_3_0, 
        		"de.cau.cs.kieler.kiml.grana.text.Grana.GlobalOutputRef");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?(	otherlv_4='execute' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getGranaAccess().getExecuteKeyword_2_0());
    }
(
(
		lv_parallel_5_0=	'parallel' 
    {
        newLeafNode(lv_parallel_5_0, grammarAccess.getGranaAccess().getParallelParallelKeyword_2_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGranaRule());
	        }
       		setWithLastConsumed($current, "parallel", true, "parallel");
	    }

)
)?((
(
		lv_executeAll_6_0=	'all' 
    {
        newLeafNode(lv_executeAll_6_0, grammarAccess.getGranaAccess().getExecuteAllAllKeyword_2_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGranaRule());
	        }
       		setWithLastConsumed($current, "executeAll", true, "all");
	    }

)
)
    |(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getGranaRule());
	        }
        }
	otherlv_7=RULE_ID
	{
		newLeafNode(otherlv_7, grammarAccess.getGranaAccess().getExecuteJobCrossReference_2_2_1_0()); 
	}

)
)+))(
(
		{ 
	        newCompositeNode(grammarAccess.getGranaAccess().getJobsJobParserRuleCall_3_0()); 
	    }
		lv_jobs_8_0=ruleJob		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGranaRule());
	        }
       		add(
       			$current, 
       			"jobs",
        		lv_jobs_8_0, 
        		"de.cau.cs.kieler.kiml.grana.text.Grana.Job");
	        afterParserOrEnumRuleCall();
	    }

)
)+)
;





// Entry rule entryRuleJob
entryRuleJob returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJobRule()); }
	 iv_ruleJob=ruleJob 
	 { $current=$iv_ruleJob.current; } 
	 EOF 
;

// Rule Job
ruleJob returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getJobAccess().getRegularJobParserRuleCall_0()); 
    }
    this_RegularJob_0=ruleRegularJob
    { 
        $current = $this_RegularJob_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getJobAccess().getRangeJobParserRuleCall_1()); 
    }
    this_RangeJob_1=ruleRangeJob
    { 
        $current = $this_RangeJob_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getJobAccess().getCompareJobParserRuleCall_2()); 
    }
    this_CompareJob_2=ruleCompareJob
    { 
        $current = $this_CompareJob_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleRegularJob
entryRuleRegularJob returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRegularJobRule()); }
	 iv_ruleRegularJob=ruleRegularJob 
	 { $current=$iv_ruleRegularJob.current; } 
	 EOF 
;

// Rule RegularJob
ruleRegularJob returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='job' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRegularJobAccess().getJobKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getRegularJobAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRegularJobRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"de.cau.cs.kieler.kiml.grana.text.Grana.ID");
	    }

)
)(
(
		lv_layoutBeforeAnalysis_2_0=	'layoutBeforeAnalysis' 
    {
        newLeafNode(lv_layoutBeforeAnalysis_2_0, grammarAccess.getRegularJobAccess().getLayoutBeforeAnalysisLayoutBeforeAnalysisKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRegularJobRule());
	        }
       		setWithLastConsumed($current, "layoutBeforeAnalysis", true, "layoutBeforeAnalysis");
	    }

)
)?(
(
		lv_measureExecutionTime_3_0=	'measureExecutionTime' 
    {
        newLeafNode(lv_measureExecutionTime_3_0, grammarAccess.getRegularJobAccess().getMeasureExecutionTimeMeasureExecutionTimeKeyword_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRegularJobRule());
	        }
       		setWithLastConsumed($current, "measureExecutionTime", true, "measureExecutionTime");
	    }

)
)?	otherlv_4='resources' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRegularJobAccess().getResourcesKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRegularJobAccess().getResourcesResourceParserRuleCall_5_0()); 
	    }
		lv_resources_5_0=ruleResource		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRegularJobRule());
	        }
       		add(
       			$current, 
       			"resources",
        		lv_resources_5_0, 
        		"de.cau.cs.kieler.kiml.grana.text.Grana.Resource");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_6='layoutoptions' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getRegularJobAccess().getLayoutoptionsKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRegularJobAccess().getLayoutOptionsKIdentifierParserRuleCall_7_0()); 
	    }
		lv_layoutOptions_7_0=ruleKIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRegularJobRule());
	        }
       		add(
       			$current, 
       			"layoutOptions",
        		lv_layoutOptions_7_0, 
        		"de.cau.cs.kieler.kiml.grana.text.Grana.KIdentifier");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_8='analyses' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getRegularJobAccess().getAnalysesKeyword_8());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRegularJobAccess().getAnalysesAnalysisParserRuleCall_9_0()); 
	    }
		lv_analyses_9_0=ruleAnalysis		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRegularJobRule());
	        }
       		add(
       			$current, 
       			"analyses",
        		lv_analyses_9_0, 
        		"de.cau.cs.kieler.kiml.grana.text.Grana.Analysis");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_10='output' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getRegularJobAccess().getOutputKeyword_10());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRegularJobAccess().getOutputTypeOutputTypeEnumRuleCall_11_0()); 
	    }
		lv_outputType_11_0=ruleOutputType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRegularJobRule());
	        }
       		set(
       			$current, 
       			"outputType",
        		lv_outputType_11_0, 
        		"de.cau.cs.kieler.kiml.grana.text.Grana.OutputType");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getRegularJobAccess().getOutputOutputParserRuleCall_12_0()); 
	    }
		lv_output_12_0=ruleOutput		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRegularJobRule());
	        }
       		set(
       			$current, 
       			"output",
        		lv_output_12_0, 
        		"de.cau.cs.kieler.kiml.grana.text.Grana.Output");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleCompareJob
entryRuleCompareJob returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCompareJobRule()); }
	 iv_ruleCompareJob=ruleCompareJob 
	 { $current=$iv_ruleCompareJob.current; } 
	 EOF 
;

// Rule CompareJob
ruleCompareJob returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='comparejob' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCompareJobAccess().getComparejobKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getCompareJobAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCompareJobRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"de.cau.cs.kieler.kiml.grana.text.Grana.ID");
	    }

)
)	otherlv_2='resources' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCompareJobAccess().getResourcesKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCompareJobAccess().getResourcesResourceParserRuleCall_3_0()); 
	    }
		lv_resources_3_0=ruleResource		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompareJobRule());
	        }
       		add(
       			$current, 
       			"resources",
        		lv_resources_3_0, 
        		"de.cau.cs.kieler.kiml.grana.text.Grana.Resource");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_4='layoutoptions' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getCompareJobAccess().getLayoutoptionsKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCompareJobAccess().getLayoutOptionsKIdentifierParserRuleCall_5_0()); 
	    }
		lv_layoutOptions_5_0=ruleKIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompareJobRule());
	        }
       		add(
       			$current, 
       			"layoutOptions",
        		lv_layoutOptions_5_0, 
        		"de.cau.cs.kieler.kiml.grana.text.Grana.KIdentifier");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCompareJobAccess().getLayoutOptionsKIdentifierParserRuleCall_6_0()); 
	    }
		lv_layoutOptions_6_0=ruleKIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompareJobRule());
	        }
       		add(
       			$current, 
       			"layoutOptions",
        		lv_layoutOptions_6_0, 
        		"de.cau.cs.kieler.kiml.grana.text.Grana.KIdentifier");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7='analyses' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getCompareJobAccess().getAnalysesKeyword_7());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCompareJobAccess().getAnalysesAnalysisParserRuleCall_8_0()); 
	    }
		lv_analyses_8_0=ruleAnalysis		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompareJobRule());
	        }
       		add(
       			$current, 
       			"analyses",
        		lv_analyses_8_0, 
        		"de.cau.cs.kieler.kiml.grana.text.Grana.Analysis");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_9='output' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getCompareJobAccess().getOutputKeyword_9());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCompareJobAccess().getOutputTypeOutputTypeEnumRuleCall_10_0()); 
	    }
		lv_outputType_10_0=ruleOutputType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompareJobRule());
	        }
       		set(
       			$current, 
       			"outputType",
        		lv_outputType_10_0, 
        		"de.cau.cs.kieler.kiml.grana.text.Grana.OutputType");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getCompareJobAccess().getOutputOutputParserRuleCall_11_0()); 
	    }
		lv_output_11_0=ruleOutput		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompareJobRule());
	        }
       		set(
       			$current, 
       			"output",
        		lv_output_11_0, 
        		"de.cau.cs.kieler.kiml.grana.text.Grana.Output");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleRangeJob
entryRuleRangeJob returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRangeJobRule()); }
	 iv_ruleRangeJob=ruleRangeJob 
	 { $current=$iv_ruleRangeJob.current; } 
	 EOF 
;

// Rule RangeJob
ruleRangeJob returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='rangejob' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRangeJobAccess().getRangejobKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getRangeJobAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRangeJobRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"de.cau.cs.kieler.kiml.grana.text.Grana.ID");
	    }

)
)(
(
		lv_measureExecutionTime_2_0=	'measureExecutionTime' 
    {
        newLeafNode(lv_measureExecutionTime_2_0, grammarAccess.getRangeJobAccess().getMeasureExecutionTimeMeasureExecutionTimeKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRangeJobRule());
	        }
       		setWithLastConsumed($current, "measureExecutionTime", true, "measureExecutionTime");
	    }

)
)?	otherlv_3='resources' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRangeJobAccess().getResourcesKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRangeJobAccess().getResourcesResourceParserRuleCall_4_0()); 
	    }
		lv_resources_4_0=ruleResource		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRangeJobRule());
	        }
       		add(
       			$current, 
       			"resources",
        		lv_resources_4_0, 
        		"de.cau.cs.kieler.kiml.grana.text.Grana.Resource");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_5='layoutoptions' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getRangeJobAccess().getLayoutoptionsKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRangeJobAccess().getLayoutOptionsKIdentifierParserRuleCall_6_0()); 
	    }
		lv_layoutOptions_6_0=ruleKIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRangeJobRule());
	        }
       		add(
       			$current, 
       			"layoutOptions",
        		lv_layoutOptions_6_0, 
        		"de.cau.cs.kieler.kiml.grana.text.Grana.KIdentifier");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_7='analyses' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getRangeJobAccess().getAnalysesKeyword_7());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRangeJobAccess().getAnalysesAnalysisParserRuleCall_8_0()); 
	    }
		lv_analyses_8_0=ruleAnalysis		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRangeJobRule());
	        }
       		add(
       			$current, 
       			"analyses",
        		lv_analyses_8_0, 
        		"de.cau.cs.kieler.kiml.grana.text.Grana.Analysis");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_9='rangeoption' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getRangeJobAccess().getRangeoptionKeyword_9());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRangeJobAccess().getRangeOptionQualifiedIDParserRuleCall_10_0()); 
	    }
		lv_rangeOption_10_0=ruleQualifiedID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRangeJobRule());
	        }
       		set(
       			$current, 
       			"rangeOption",
        		lv_rangeOption_10_0, 
        		"de.cau.cs.kieler.kiml.grana.text.Grana.QualifiedID");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRangeJobAccess().getRangeValuesRangeParserRuleCall_11_0()); 
	    }
		lv_rangeValues_11_0=ruleRange		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRangeJobRule());
	        }
       		set(
       			$current, 
       			"rangeValues",
        		lv_rangeValues_11_0, 
        		"de.cau.cs.kieler.kiml.grana.text.Grana.Range");
	        afterParserOrEnumRuleCall();
	    }

)
)((	otherlv_12='rangeanalysis' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getRangeJobAccess().getRangeanalysisKeyword_12_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRangeJobAccess().getRangeAnalysisAnalysisParserRuleCall_12_0_1_0()); 
	    }
		lv_rangeAnalysis_13_0=ruleAnalysis		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRangeJobRule());
	        }
       		set(
       			$current, 
       			"rangeAnalysis",
        		lv_rangeAnalysis_13_0, 
        		"de.cau.cs.kieler.kiml.grana.text.Grana.Analysis");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_14='component' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getRangeJobAccess().getComponentKeyword_12_0_2_0());
    }
(
(
		lv_rangeAnalysisComponent_15_0=RULE_NATURAL
		{
			newLeafNode(lv_rangeAnalysisComponent_15_0, grammarAccess.getRangeJobAccess().getRangeAnalysisComponentNATURALTerminalRuleCall_12_0_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRangeJobRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"rangeAnalysisComponent",
        		lv_rangeAnalysisComponent_15_0, 
        		"de.cau.cs.kieler.kiml.grana.text.Grana.NATURAL");
	    }

)
))?)
    |(	otherlv_16='rangeanalyses' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getRangeJobAccess().getRangeanalysesKeyword_12_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRangeJobAccess().getRangeAnalysesAnalysisParserRuleCall_12_1_1_0()); 
	    }
		lv_rangeAnalyses_17_0=ruleAnalysis		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRangeJobRule());
	        }
       		add(
       			$current, 
       			"rangeAnalyses",
        		lv_rangeAnalyses_17_0, 
        		"de.cau.cs.kieler.kiml.grana.text.Grana.Analysis");
	        afterParserOrEnumRuleCall();
	    }

)
)+))	otherlv_18='output' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getRangeJobAccess().getOutputKeyword_13());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRangeJobAccess().getOutputTypeOutputTypeEnumRuleCall_14_0()); 
	    }
		lv_outputType_19_0=ruleOutputType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRangeJobRule());
	        }
       		set(
       			$current, 
       			"outputType",
        		lv_outputType_19_0, 
        		"de.cau.cs.kieler.kiml.grana.text.Grana.OutputType");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getRangeJobAccess().getOutputOutputParserRuleCall_15_0()); 
	    }
		lv_output_20_0=ruleOutput		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRangeJobRule());
	        }
       		set(
       			$current, 
       			"output",
        		lv_output_20_0, 
        		"de.cau.cs.kieler.kiml.grana.text.Grana.Output");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleRange
entryRuleRange returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRangeRule()); }
	 iv_ruleRange=ruleRange 
	 { $current=$iv_ruleRange.current; } 
	 EOF 
;

// Rule Range
ruleRange returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getRangeAccess().getFloatRangeParserRuleCall_0()); 
    }
    this_FloatRange_0=ruleFloatRange
    { 
        $current = $this_FloatRange_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRangeAccess().getIntRangeParserRuleCall_1()); 
    }
    this_IntRange_1=ruleIntRange
    { 
        $current = $this_IntRange_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleFloatRange
entryRuleFloatRange returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFloatRangeRule()); }
	 iv_ruleFloatRange=ruleFloatRange 
	 { $current=$iv_ruleFloatRange.current; } 
	 EOF 
;

// Rule FloatRange
ruleFloatRange returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='floatvalues' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFloatRangeAccess().getFloatvaluesKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFloatRangeAccess().getValuesFloatParserRuleCall_1_0()); 
	    }
		lv_values_1_0=ruleFloat		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFloatRangeRule());
	        }
       		add(
       			$current, 
       			"values",
        		lv_values_1_0, 
        		"de.cau.cs.kieler.kiml.grana.text.Grana.Float");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getFloatRangeAccess().getCommaKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFloatRangeAccess().getValuesFloatParserRuleCall_2_1_0()); 
	    }
		lv_values_3_0=ruleFloat		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFloatRangeRule());
	        }
       		add(
       			$current, 
       			"values",
        		lv_values_3_0, 
        		"de.cau.cs.kieler.kiml.grana.text.Grana.Float");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleIntRange
entryRuleIntRange returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntRangeRule()); }
	 iv_ruleIntRange=ruleIntRange 
	 { $current=$iv_ruleIntRange.current; } 
	 EOF 
;

// Rule IntRange
ruleIntRange returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getIntRangeAccess().getIntRangeRangeParserRuleCall_0()); 
    }
    this_IntRangeRange_0=ruleIntRangeRange
    { 
        $current = $this_IntRangeRange_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getIntRangeAccess().getIntRangeValuesParserRuleCall_1()); 
    }
    this_IntRangeValues_1=ruleIntRangeValues
    { 
        $current = $this_IntRangeValues_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleIntRangeValues
entryRuleIntRangeValues returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntRangeValuesRule()); }
	 iv_ruleIntRangeValues=ruleIntRangeValues 
	 { $current=$iv_ruleIntRangeValues.current; } 
	 EOF 
;

// Rule IntRangeValues
ruleIntRangeValues returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='intvalues' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIntRangeValuesAccess().getIntvaluesKeyword_0());
    }
(
(
		lv_values_1_0=RULE_NATURAL
		{
			newLeafNode(lv_values_1_0, grammarAccess.getIntRangeValuesAccess().getValuesNATURALTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntRangeValuesRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"values",
        		lv_values_1_0, 
        		"de.cau.cs.kieler.kiml.grana.text.Grana.NATURAL");
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getIntRangeValuesAccess().getCommaKeyword_2_0());
    }
(
(
		lv_values_3_0=RULE_NATURAL
		{
			newLeafNode(lv_values_3_0, grammarAccess.getIntRangeValuesAccess().getValuesNATURALTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntRangeValuesRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"values",
        		lv_values_3_0, 
        		"de.cau.cs.kieler.kiml.grana.text.Grana.NATURAL");
	    }

)
))*)
;





// Entry rule entryRuleIntRangeRange
entryRuleIntRangeRange returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntRangeRangeRule()); }
	 iv_ruleIntRangeRange=ruleIntRangeRange 
	 { $current=$iv_ruleIntRangeRange.current; } 
	 EOF 
;

// Rule IntRangeRange
ruleIntRangeRange returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='intrange' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIntRangeRangeAccess().getIntrangeKeyword_0());
    }
(
(
		lv_start_1_0=RULE_NATURAL
		{
			newLeafNode(lv_start_1_0, grammarAccess.getIntRangeRangeAccess().getStartNATURALTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntRangeRangeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"start",
        		lv_start_1_0, 
        		"de.cau.cs.kieler.kiml.grana.text.Grana.NATURAL");
	    }

)
)	otherlv_2='to' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getIntRangeRangeAccess().getToKeyword_2());
    }
(
(
		lv_end_3_0=RULE_NATURAL
		{
			newLeafNode(lv_end_3_0, grammarAccess.getIntRangeRangeAccess().getEndNATURALTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntRangeRangeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"end",
        		lv_end_3_0, 
        		"de.cau.cs.kieler.kiml.grana.text.Grana.NATURAL");
	    }

)
))
;





// Entry rule entryRuleResource
entryRuleResource returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getResourceRule()); }
	 iv_ruleResource=ruleResource 
	 { $current=$iv_ruleResource.current; } 
	 EOF 
;

// Rule Resource
ruleResource returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getResourceAccess().getResourceReferenceParserRuleCall_0()); 
    }
    this_ResourceReference_0=ruleResourceReference
    { 
        $current = $this_ResourceReference_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getResourceAccess().getLocalResourceParserRuleCall_1()); 
    }
    this_LocalResource_1=ruleLocalResource
    { 
        $current = $this_LocalResource_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleResourceReference
entryRuleResourceReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getResourceReferenceRule()); }
	 iv_ruleResourceReference=ruleResourceReference 
	 { $current=$iv_ruleResourceReference.current; } 
	 EOF 
;

// Rule ResourceReference
ruleResourceReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='ref' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getResourceReferenceAccess().getRefKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getResourceReferenceRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getResourceReferenceAccess().getResourceRefsGlobalResourceRefCrossReference_1_0()); 
	}

)
)+)
;





// Entry rule entryRuleGlobalResourceRef
entryRuleGlobalResourceRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGlobalResourceRefRule()); }
	 iv_ruleGlobalResourceRef=ruleGlobalResourceRef 
	 { $current=$iv_ruleGlobalResourceRef.current; } 
	 EOF 
;

// Rule GlobalResourceRef
ruleGlobalResourceRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getGlobalResourceRefAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGlobalResourceRefRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"de.cau.cs.kieler.kiml.grana.text.Grana.ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getGlobalResourceRefAccess().getResourcesLocalResourceParserRuleCall_1_0()); 
	    }
		lv_resources_1_0=ruleLocalResource		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGlobalResourceRefRule());
	        }
       		add(
       			$current, 
       			"resources",
        		lv_resources_1_0, 
        		"de.cau.cs.kieler.kiml.grana.text.Grana.LocalResource");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleLocalResource
entryRuleLocalResource returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLocalResourceRule()); }
	 iv_ruleLocalResource=ruleLocalResource 
	 { $current=$iv_ruleLocalResource.current; } 
	 EOF 
;

// Rule LocalResource
ruleLocalResource returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_path_0_0=RULE_STRING
		{
			newLeafNode(lv_path_0_0, grammarAccess.getLocalResourceAccess().getPathSTRINGTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLocalResourceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"path",
        		lv_path_0_0, 
        		"de.cau.cs.kieler.kiml.grana.text.Grana.STRING");
	    }

)
)(	otherlv_1='filter' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLocalResourceAccess().getFilterKeyword_1_0());
    }
(
(
		lv_filter_2_0=RULE_STRING
		{
			newLeafNode(lv_filter_2_0, grammarAccess.getLocalResourceAccess().getFilterSTRINGTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLocalResourceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"filter",
        		lv_filter_2_0, 
        		"de.cau.cs.kieler.kiml.grana.text.Grana.STRING");
	    }

)
)))
;





// Entry rule entryRuleOutput
entryRuleOutput returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOutputRule()); }
	 iv_ruleOutput=ruleOutput 
	 { $current=$iv_ruleOutput.current; } 
	 EOF 
;

// Rule Output
ruleOutput returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getOutputAccess().getOutputReferenceParserRuleCall_0()); 
    }
    this_OutputReference_0=ruleOutputReference
    { 
        $current = $this_OutputReference_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOutputAccess().getLocalOutputParserRuleCall_1()); 
    }
    this_LocalOutput_1=ruleLocalOutput
    { 
        $current = $this_LocalOutput_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleGlobalOutputRef
entryRuleGlobalOutputRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGlobalOutputRefRule()); }
	 iv_ruleGlobalOutputRef=ruleGlobalOutputRef 
	 { $current=$iv_ruleGlobalOutputRef.current; } 
	 EOF 
;

// Rule GlobalOutputRef
ruleGlobalOutputRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getGlobalOutputRefAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGlobalOutputRefRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"de.cau.cs.kieler.kiml.grana.text.Grana.ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getGlobalOutputRefAccess().getOutputLocalOutputParserRuleCall_1_0()); 
	    }
		lv_output_1_0=ruleLocalOutput		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGlobalOutputRefRule());
	        }
       		set(
       			$current, 
       			"output",
        		lv_output_1_0, 
        		"de.cau.cs.kieler.kiml.grana.text.Grana.LocalOutput");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleOutputReference
entryRuleOutputReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOutputReferenceRule()); }
	 iv_ruleOutputReference=ruleOutputReference 
	 { $current=$iv_ruleOutputReference.current; } 
	 EOF 
;

// Rule OutputReference
ruleOutputReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='ref' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getOutputReferenceAccess().getRefKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getOutputReferenceRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getOutputReferenceAccess().getOutputRefGlobalOutputRefCrossReference_1_0()); 
	}

)
))
;





// Entry rule entryRuleLocalOutput
entryRuleLocalOutput returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLocalOutputRule()); }
	 iv_ruleLocalOutput=ruleLocalOutput 
	 { $current=$iv_ruleLocalOutput.current; } 
	 EOF 
;

// Rule LocalOutput
ruleLocalOutput returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_path_0_0=RULE_STRING
		{
			newLeafNode(lv_path_0_0, grammarAccess.getLocalOutputAccess().getPathSTRINGTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLocalOutputRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"path",
        		lv_path_0_0, 
        		"de.cau.cs.kieler.kiml.grana.text.Grana.STRING");
	    }

)
)
;





// Entry rule entryRuleAnalysis
entryRuleAnalysis returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAnalysisRule()); }
	 iv_ruleAnalysis=ruleAnalysis 
	 { $current=$iv_ruleAnalysis.current; } 
	 EOF 
;

// Rule Analysis
ruleAnalysis returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getAnalysisAccess().getNameQualifiedIDParserRuleCall_0()); 
	    }
		lv_name_0_0=ruleQualifiedID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnalysisRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"de.cau.cs.kieler.kiml.grana.text.Grana.QualifiedID");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleKIdentifier
entryRuleKIdentifier returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getKIdentifierRule()); }
	 iv_ruleKIdentifier=ruleKIdentifier 
	 { $current=$iv_ruleKIdentifier.current; } 
	 EOF 
;

// Rule KIdentifier
ruleKIdentifier returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getKIdentifierAccess().getKIdentifierAction_0(),
            $current);
    }
)(
(
		lv_id_1_0=RULE_ID
		{
			newLeafNode(lv_id_1_0, grammarAccess.getKIdentifierAccess().getIdIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getKIdentifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_1_0, 
        		"de.cau.cs.kieler.kiml.grana.text.Grana.ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getKIdentifierAccess().getLeftCurlyBracketKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getKIdentifierAccess().getPersistentEntriesPersistentEntryParserRuleCall_3_0_0()); 
	    }
		lv_persistentEntries_3_0=rulePersistentEntry		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getKIdentifierRule());
	        }
       		add(
       			$current, 
       			"persistentEntries",
        		lv_persistentEntries_3_0, 
        		"de.cau.cs.kieler.kiml.grana.text.Grana.PersistentEntry");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getKIdentifierAccess().getPersistentEntriesPersistentEntryParserRuleCall_3_1_0()); 
	    }
		lv_persistentEntries_4_0=rulePersistentEntry		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getKIdentifierRule());
	        }
       		add(
       			$current, 
       			"persistentEntries",
        		lv_persistentEntries_4_0, 
        		"de.cau.cs.kieler.kiml.grana.text.Grana.PersistentEntry");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getKIdentifierAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRulePersistentEntry
entryRulePersistentEntry returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPersistentEntryRule()); }
	 iv_rulePersistentEntry=rulePersistentEntry 
	 { $current=$iv_rulePersistentEntry.current; } 
	 EOF 
;

// Rule PersistentEntry
rulePersistentEntry returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getPersistentEntryAccess().getKeyQualifiedIDParserRuleCall_0_0()); 
	    }
		lv_key_0_0=ruleQualifiedID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPersistentEntryRule());
	        }
       		set(
       			$current, 
       			"key",
        		lv_key_0_0, 
        		"de.cau.cs.kieler.kiml.grana.text.Grana.QualifiedID");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPersistentEntryAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPersistentEntryAccess().getValuePropertyValueParserRuleCall_2_0()); 
	    }
		lv_value_2_0=rulePropertyValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPersistentEntryRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"de.cau.cs.kieler.kiml.grana.text.Grana.PropertyValue");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleQualifiedID
entryRuleQualifiedID returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedIDRule()); } 
	 iv_ruleQualifiedID=ruleQualifiedID 
	 { $current=$iv_ruleQualifiedID.current.getText(); }  
	 EOF 
;

// Rule QualifiedID
ruleQualifiedID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getQualifiedIDAccess().getIDTerminalRuleCall_0()); 
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedIDAccess().getFullStopKeyword_1_0()); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getQualifiedIDAccess().getIDTerminalRuleCall_1_1()); 
    }
)*)
    ;





// Entry rule entryRulePropertyValue
entryRulePropertyValue returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getPropertyValueRule()); } 
	 iv_rulePropertyValue=rulePropertyValue 
	 { $current=$iv_rulePropertyValue.current.getText(); }  
	 EOF 
;

// Rule PropertyValue
rulePropertyValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_BOOLEAN_0=RULE_BOOLEAN    {
		$current.merge(this_BOOLEAN_0);
    }

    { 
    newLeafNode(this_BOOLEAN_0, grammarAccess.getPropertyValueAccess().getBOOLEANTerminalRuleCall_0()); 
    }

    |    this_STRING_1=RULE_STRING    {
		$current.merge(this_STRING_1);
    }

    { 
    newLeafNode(this_STRING_1, grammarAccess.getPropertyValueAccess().getSTRINGTerminalRuleCall_1()); 
    }

    |
    { 
        newCompositeNode(grammarAccess.getPropertyValueAccess().getFloatParserRuleCall_2()); 
    }
    this_Float_2=ruleFloat    {
		$current.merge(this_Float_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPropertyValueAccess().getQualifiedIDParserRuleCall_3()); 
    }
    this_QualifiedID_3=ruleQualifiedID    {
		$current.merge(this_QualifiedID_3);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    ;





// Entry rule entryRuleFloat
entryRuleFloat returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getFloatRule()); } 
	 iv_ruleFloat=ruleFloat 
	 { $current=$iv_ruleFloat.current.getText(); }  
	 EOF 
;

// Rule Float
ruleFloat returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_TFLOAT_0=RULE_TFLOAT    {
		$current.merge(this_TFLOAT_0);
    }

    { 
    newLeafNode(this_TFLOAT_0, grammarAccess.getFloatAccess().getTFLOATTerminalRuleCall_0()); 
    }

    |    this_NATURAL_1=RULE_NATURAL    {
		$current.merge(this_NATURAL_1);
    }

    { 
    newLeafNode(this_NATURAL_1, grammarAccess.getFloatAccess().getNATURALTerminalRuleCall_1()); 
    }
)
    ;





// Rule OutputType
ruleOutputType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='csv' 
	{
        $current = grammarAccess.getOutputTypeAccess().getCsvEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getOutputTypeAccess().getCsvEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='json' 
	{
        $current = grammarAccess.getOutputTypeAccess().getJsonEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getOutputTypeAccess().getJsonEnumLiteralDeclaration_1()); 
    }
));



RULE_TFLOAT : (('+'|'-') (('0'..'9')+ ('.' ('0'..'9')*)? (('e'|'E') ('+'|'-')? ('0'..'9')+)?|'.' ('0'..'9')+ (('e'|'E') ('+'|'-')? ('0'..'9')+)?)|('0'..'9')+ '.' ('0'..'9')* (('e'|'E') ('+'|'-')? ('0'..'9')+)?|'.' ('0'..'9')+ (('e'|'E') ('+'|'-')? ('0'..'9')+)?|('0'..'9')+ ('e'|'E') ('+'|'-')? ('0'..'9')+);

RULE_NATURAL : ('0'..'9')+;

RULE_BOOLEAN : ('true'|'false');

RULE_STRING : '"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;


