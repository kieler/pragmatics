apply plugin: 'java'

repositories {
    mavenCentral()
}

configurations {
    testFatKlayCompile.extendsFrom      testCompile
    testFatKlayAllCompile.extendsFrom   testCompile
    testKlayCompile.extendsFrom         testCompile
    testJsonCompile.extendsFrom         testCompile
}

dependencies {
    testCompile "junit:junit:[4,)"

    testFatKlayCompile fileTree(dir: "${rootProject.buildDir}/$libsA/", include: "klay-${rootProject.version}.jar")
    testFatKlayCompile klayExtraDeps

    testFatKlayAllCompile fileTree(dir: "${rootProject.buildDir}/$libsA/", include: "klay-${rootProject.version}-all.jar")

    testKlayCompile klayDeps
    testKlayCompile klayExtraDeps

    testJsonCompile klayDeps
    testJsonCompile klayExtraDeps
    testJsonCompile formatsDeps
    testJsonCompile formatsExtraDeps
    testJsonCompile jsonDeps
    testJsonCompile jsonExtraDeps
    testJsonCompile project(':nonosgi')
}

sourceSets {
    testFatKlay {
        java {
            srcDirs = ['src']
            include 'PlainJavaTest.java'
        }
    }
    testFatKlayAll {
        java {
            srcDirs = ['src']
            include 'PlainJavaTest.java'
        }
    }
    testKlay {
        java {
            srcDirs = ['src']
            include 'PlainJavaTest.java'
        }
    }
    testJson {
        java {
            srcDirs = ['src']
            include 'JsonTest.java'
        }
    }
}

tasks.withType(Test){task ->
    useJUnit()
    reports.html.enabled = false
    reports.junitXml.destination = "$buildDir/test-results/${task.name}"
}

task testFatKlay(type: Test, dependsOn: rootProject.tasks['fatKlay']) {
    group 'KIELER test'
    description = 'Test the bundled Klay (which does not include dependencies).'
    testClassesDir = sourceSets.testFatKlay.output.classesDir
    classpath = sourceSets.testFatKlay.runtimeClasspath
}

task testFatKlayAll(type: Test, dependsOn: rootProject.tasks['fatKlayAll']) {
    group 'KIELER test'
    description = 'Test the bundled Klay (which does include dependencies).'
    testClassesDir = sourceSets.testFatKlayAll.output.classesDir
    classpath = sourceSets.testFatKlayAll.runtimeClasspath
}

task testKlay(type: Test) {
    group 'KIELER test'
    description = 'Test the Klay plugin collection.'
    testClassesDir = sourceSets.testKlay.output.classesDir
    classpath = sourceSets.testKlay.runtimeClasspath
}

task testJson(type: Test) {
    group 'KIELER test'
    description = 'Test the Klay with JSON import plugin collection.'
    testClassesDir = sourceSets.testJson.output.classesDir
    classpath = sourceSets.testJson.runtimeClasspath
}

// Explicitly set task order to prevent the clean task from running after any build task.
testFatKlay.mustRunAfter clean
testFatKlayAll.mustRunAfter clean
testKlay.mustRunAfter clean
testJson.mustRunAfter clean
