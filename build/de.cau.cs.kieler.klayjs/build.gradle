def helpMsg = """
Gradle script for building Klay JavaScript version.

Requirements
============

environment variables
---------------------
GWT_SDK=/path/to/gwt-sdk

software (for running the tests)
--------------------------------
nodejs
    https://nodejs.org/download/
.NET Framework Software Development Kit (SDK) version 2.0
    http://www.microsoft.com/en-us/download/details.aspx?id=19988

Build and test all
==================
./gradlew all

Build complete nightlies
========================
./gradlew clean buildall

Run all tests
=============
./gradlew clean testAll

Available tasks
===============
./gradlew tasks
Relevant tasks are grouped in 'KIELER {build|test|misc} tasks'.

Extra parameters via properties-file and/or cmd-line parameter
==============================================================
~/.gradle/gradle.properties:
----------------------------
org.gradle.daemon=false

cli:
----
./gradlew -Dorg.gradle.daemon=false -D...=... <tasks>
"""

apply plugin: 'base'

repositories {
    mavenCentral()
    maven {
      url "https://oss.sonatype.org/content/repositories/google-snapshots/"
    }
}

configurations {
    junitAnt
    gwt
}

dependencies {
    junitAnt 'junit:junit:4.8.2'
    junitAnt('org.apache.ant:ant-junit:1.9.2') {
        transitive = false
    }
    junitAnt('org.apache.ant:ant-junit4:1.9.2') {
        transitive = false
    }
    gwt group: "com.google.gwt", name: "gwt", version: "2.7+", changing: true
    gwt group: "com.google.gwt", name: "gwt-dev", version: "2.7+", changing: true
    gwt group: "com.google.gwt", name: "gwt-user", version: "2.7+", changing: true
    gwt group: "com.google.gwt", name: "gwt-servlet", version: "2.7+", changing: true
}

// Importing ant build.xml
// --------------------------------------------------------

ant.taskdef(name: 'junit', classname: 'org.apache.tools.ant.taskdefs.optional.junit.JUnitTask', classpath: configurations.junitAnt.asPath)
if (System.getenv()['GWT_SDK'] == null) {
    ext.gwt_sdk = "$buildDir/gwt/"
    ant.properties['system.GWT_SDK'] = "$buildDir/gwt/"
} else {
    ext.gwt_sdk = System.getenv()['GWT_SDK']
}
ant.importBuild 'build.xml'

clean.group 'KIELER build'
clean.description 'Deletes the target directory with all of its contents.'
copySrc.group 'KIELER build'
copySrc.description "Copies klay's java sources from the main repository."
dist.group 'KIELER build'
dist.description 'Compiles and bundles the klay layered algortihm as js.'
buildall.group 'KIELER build'
buildall.description 'Clean and dist.'

// gwt download
// --------------------------------------------------------

task getGWT(type: Copy) {
    from configurations.gwt
    into "$buildDir/gwt"
    rename 'gwt(-.*)?-[0-9]+.[0-9]+.[0-9]+(-SNAPSHOT)?.jar', 'gwt$1.jar'
}
clean.dependsOn cleanGetGWT
// Setting gwt dependencies on every build task may seem a bit verbose, but otherwise it won't work.
// When migrating to gradle completely this becomes superflous anyway.
libs.dependsOn getGWT
gwtc.dependsOn getGWT
stdlinker.dependsOn getGWT
customlinker.dependsOn getGWT
webworkerlinker.dependsOn getGWT
plainjslinker.dependsOn getGWT

// Convenience tasks
// --------------------------------------------------------

// Explicitly set task order to prevent the clean task from running after any build task.
getGWT.mustRunAfter clean
buildall.mustRunAfter clean

// TBD when migrating ant to gradle
// task buildAll(dependsOn: []) {
//     group 'KIELER build'
//     description 'Bundle and/or gather all artifacts.'
// }
task testAll(dependsOn: [':test/java:test', ':test/js:testBrowser', ':test/js:testNodejs', ':test/js:testWebworker']) {
    group 'KIELER test'
    description 'Run all tests.'
}
task all(dependsOn: [clean, buildall, testAll]) {
    group 'KIELER build'
    description 'Clean, build and test all.'
}

help.doLast {
    println helpMsg
}

// Utilities
// --------------------------------------------------------

task runSuperDevMode(type:Exec, dependsOn: javac) {
    group 'KIELER misc'
    description 'Starts the SuperDevMode code server.'
    def gwt = System.getenv('GWT_SDK')

    workingDir '.'
    executable 'java'
    args = [
        "-cp",
        [ // windows and unix require different path separators
         "$gwt/gwt-dev.jar",
         "$gwt/*",
         "war/WEB-INF/lib/*",
         "src",
         "src-external"].join(File.pathSeparator),
        "com.google.gwt.dev.DevMode",
        "-war",
        "war",
        "-startupUrl",
        "KlayJsExample.html",
        "de.cau.cs.kieler.klay.gwt.KlayGWT"
    ]

    doFirst {
        // run check only when task is actually executed
        if (!gwt) {
            throw new InvalidUserDataException("No GWT_SDK was specified!")
        }
    }
}

// Extra args to execute stuff on windows

def isWindows = System.properties['os.name'].toLowerCase().contains('windows');

tasks.withType(Exec){task ->
    if (isWindows) {
        task.args = ['/c', task.executable] + task.args
        task.executable = 'cmd'
    }
}
