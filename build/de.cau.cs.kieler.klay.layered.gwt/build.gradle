repositories {
    mavenCentral()
}

configurations {
    junitAnt
}

dependencies {
    junitAnt 'junit:junit:4.8.2'
    junitAnt('org.apache.ant:ant-junit:1.9.2') {
        transitive = false
    }
    junitAnt('org.apache.ant:ant-junit4:1.9.2') {
        transitive = false
    }
}

ant.taskdef(name: 'junit', classname: 'org.apache.tools.ant.taskdefs.optional.junit.JUnitTask', classpath: configurations.junitAnt.asPath)
ant.importBuild 'build.xml'

task npmInstall(type: Exec) {
    workingDir 'test/js'
    executable 'npm'
    args 'install'
}

task unzipKlayJs(type: Copy, dependsOn: plainjslinker) {
    from zipTree('target/klay_layered_js_plainjslinker_nightly_latest.zip')
    include 'klay.js'
    into 'test/js/src'
}

task testBrowser(type: Exec, dependsOn: [npmInstall, unzipKlayJs]) {
    workingDir 'test/js'
    executable 'npm'
    args = ['test']
}

task testNodejs(type: Exec, dependsOn: [npmInstall, unzipKlayJs]) {
    workingDir 'test/js'
    executable 'node'
    args = ['src/nodejs/run_tests.js']
}

task testWebworker(type: Exec, dependsOn: [npmInstall, unzipKlayJs]) {
    workingDir 'test/js'
    executable 'node'
    args = ['src/webworker/run_tests.js']
}

task testJs(dependsOn: [testBrowser, testNodejs, testWebworker]) {}

task cleanJs(type: Delete) {
    delete 'build'
    delete 'test/js/node_modules'
    delete 'test/js/build'
    delete 'test/js/src/klay.js'
}

task runSuperDevMode(type:Exec, dependsOn: javac) {
    def gwt = System.getenv('GWT_SDK')
    // TODO run check only when task is executed
    // if (!gwt) {
    //     throw new InvalidUserDataException("No GWT_SDK was specified!")
    // }
    workingDir '.'
    executable 'java'
    args = [
        "-cp",
        "$gwt/gwt-dev.jar:$gwt/*:war/WEB-INF/lib/*:src:src-external",
        "com.google.gwt.dev.DevMode",
        "-war",
        "war",
        "-startupUrl",
        "KlayJsExample.html",
        "de.cau.cs.kieler.klay.gwt.KlayGWT"
    ]
}
