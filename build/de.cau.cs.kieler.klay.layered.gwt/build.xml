<project name="build KLay" default="buildall">
	<!-- This is the build file that builds the KLay layout library to be used outside
         of an Eclipse context. To use this build file, run Ant from the directory
         containing the file and make sure the following environment variables are
         set correctly:
         
            TARGET_PLATFORM  Directory that contains the target platform used to build
                             KIELER. This is a p2 repository available online. Its URL
                             can be found by looking at the ../pom.xml file.
                             
            KIELER_REPOSITORY  A p2 repository of a KIELER Pragmatics build.
         
         This build file provides the following targets:
         
            clean        Deletes the target directory with all of its contents.
            withdeps     Builds the KLay library with necessary dependencies already
                         built in.
            withoutdeps  Builds the KLay library without any dependencies built in.
         
         By default, these targets are run in just that order.
         
         The output produced by the build file will be placed in a folder called
         "target", which makes it somewhat similar to what the Maven builds do.
    -->

	<!-- Setup the timestamp used for generating file names. -->
	<tstamp>
		<format property="timestamp" pattern="yyyyMMddhhmm" />
	</tstamp>

	<!-- Retrieve our system property. -->
	<property environment="system" />
	<!--property name="targetPlatformFolder" location="${system.TARGET_PLATFORM}" /-->
	<!--property name="kielerRepositoryFolder" location="${system.KIELER_REPOSITORY}" /-->
	<property name="kielerRepositoryFolder" location="../.." />

	<!-- Some more properties that configure the behaviour of the build. -->
	<property name="outputFolder" location="target" />
	<property name="outputFolder.temp" location="${outputFolder}/temp" />
	<property name="outputFile.withoutdeps" location="${outputFolder}/klay_nightly_${timestamp}.jar" />
	<property name="outputFile.withdeps" location="${outputFolder}/klay-emf_nightly_${timestamp}.jar" />
	<property name="licenseFile" location="epl-v10.html" />



	<macrodef name="copyklaysources">
		<attribute name="fromdir" />
		<sequential>
			<copy todir="src-external" overwrite="true">
				<fileset dir="${kielerRepositoryFolder}/plugins/@{fromdir}">
					<include name="**" />
					<exclude name="bin" />
					<exclude name="META-INF/*" />
					<exclude name="about.*" />
					<exclude name="images" />
					<exclude name="model" />
					<exclude name="schema" />
					<exclude name="plugin.properties" />
					<exclude name="**/*.xml" />
					<exclude name="**/*.html" />
					<exclude name="**/*.exsd" />
					<exclude name="**/*.xsd" />
					<exclude name="**/*.ecore" />
					<exclude name="**/*.genmodel" />
					<exclude name="**/*.ecorediag" />
					<exclude name="**/*.png" />
					<exclude name="**/*.gif" />
					<exclude name="**/*.pdf" />
				</fileset>
			</copy>
		</sequential>
	</macrodef>


	<!-- TARGET clean -->
	<target name="clean" description="Cleans this project.">
		<delete dir="${outputFolder}" />

		<delete dir="war/WEB-INF/classes" failonerror="false" />
		<delete dir="war/klaygwt" failonerror="false" />

		<!-- Remove the klay layered sources which are copied from the original plugins -->
		<delete failonerror="false">
			<fileset dir="src-external">
				<exclude name="**/*.txt" />
				<!-- Retain the gwt xml file -->
				<exclude name="**/Klay.gwt.xml" />
				<exclude name="org/**" />
			</fileset>
		</delete>
	</target>

	<!-- TARGET copySrc -->
	<target name="copySrc" description="">
		<!-- Copy all relevant source files to the projects src-external folder. -->
		<copyklaysources fromdir="de.cau.cs.kieler.core/src/" />
		<copyklaysources fromdir="de.cau.cs.kieler.core.kgraph/src/" />
		<copyklaysources fromdir="de.cau.cs.kieler.kiml/src/" />
		<copyklaysources fromdir="de.cau.cs.kieler.klay.layered/src/" />
	</target>


	<!-- GWT TARGETS -->

	<!-- Arguments to gwtc and devmode targets -->
	<property name="gwt.args" value="" />

	<!-- Configure path to GWT SDK -->
	<property name="gwt.sdk" location="${system.GWT_SDK}" />

	<path id="project.class.path">
		<pathelement location="war/WEB-INF/classes" />
		<pathelement location="${gwt.sdk}/gwt-user.jar" />
		<fileset dir="${gwt.sdk}" includes="gwt-dev*.jar" />
		<!-- Add any additional non-server libs (such as JUnit) -->
		<fileset dir="war/WEB-INF/lib" includes="**/*.jar" />
		<fileset dir="war/WEB-INF/classes" includes="**/*.class" />
	</path>

	<target name="libs" description="Copy libs to WEB-INF/lib">
		<mkdir dir="war/WEB-INF/lib" />
		<copy todir="war/WEB-INF/lib" file="${gwt.sdk}/gwt-servlet.jar" />
		<copy todir="war/WEB-INF/lib" file="${gwt.sdk}/gwt-servlet-deps.jar" />
		<!-- Add any additional server libs that need to be copied -->
	</target>

	<target name="javac" depends="libs" description="Compile java source to bytecode">
		<mkdir dir="war/WEB-INF/classes" />
		<javac srcdir="src-external" includes="**" encoding="utf-8" destdir="war/WEB-INF/classes" source="1.5" target="1.5" nowarn="true" debug="true" debuglevel="lines,vars,source">
			<classpath refid="project.class.path" />
		</javac>
		<javac srcdir="src" includes="**" encoding="utf-8" destdir="war/WEB-INF/classes" source="1.5" target="1.5" nowarn="true" debug="true" debuglevel="lines,vars,source">
			<classpath refid="project.class.path" />
		</javac>
		<copy todir="war/WEB-INF/classes">
			<fileset dir="src" excludes="**/*.java" />
			<fileset dir="src-external" excludes="**/*.java" />
		</copy>
	</target>

	<target name="gwtc" depends="" description="GWT compile to JavaScript (production mode)">
		<java failonerror="true" fork="true" classname="com.google.gwt.dev.Compiler">
			<!--classpath>
        <pathelement location="${outputFolder.temp}/src"/>
        <path refid="project.class.path"/>
        <pathelement location="${gwt.sdk}/validation-api-1.0.0.GA.jar" />
        <pathelement location="${gwt.sdk}/validation-api-1.0.0.GA-sources.jar" />
      </classpath-->
			<classpath>
				<pathelement location="${gwt.sdk}/gwt-user.jar" />
				<fileset dir="${gwt.sdk}" includes="gwt-dev*.jar" />
				<pathelement location="src" />
				<pathelement location="src-external" />
				<pathelement location="src-external/org/eclipse/emf/emul" />
				<fileset dir="war/WEB-INF/lib" includes="**/*.jar" />
			</classpath>
			<!-- add jvmarg -Xss16M or similar if you see a StackOverflowError    -Dgwt.jjs.permutationWorkerFactory=com.google.gwt.dev.ThreadedPermutationWorkerFactory -Dgwt.jjs.maxThreads=4  -->
			<jvmarg value="-Xmx512m" />
			<arg line="-war" />
			<arg value="war" />
			<!-- Additional arguments like -style PRETTY or -logLevel DEBUG -->
			<arg line="${gwt.args}" />
			<arg value="de.cau.klay.gwt.KlayGWT" />
		</java>
	</target>




	<!-- TARGET -->
	<target name="compile" depends="copySrc, gwtc" description="Combiles to js" />


	<!-- TARGET buidlall -->
	<target name="buildall" depends="clean, compile" description="Builds all configurations of the KLay library." />



</project>

