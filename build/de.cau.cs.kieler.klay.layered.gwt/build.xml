<project name="Build KLayLayered for GWT" default="buildall">
	<!-- This is the build file that builds the KLay layout library to be used outside
         of an Eclipse context. To use this build file, run Ant from the directory
         containing the file and make sure the following environment variables are
         set correctly:
         
            GWT_SDK			   The system's path to the GWT SDK.
            
            KIELER_REPOSITORY  A p2 repository of a KIELER Pragmatics build.
         
         This build file provides the following targets:
         
            clean        Deletes the target directory with all of its contents.
			dist 		 Compiles and bundles the klay layered alg as js.
         
         By default, these targets are run in just that order.
         
         The output produced by the build file will be placed in a folder called
         "target", which makes it somewhat similar to what the Maven builds do.
    -->

	<!-- Setup the timestamp used for generating file names. -->
	<tstamp>
		<format property="timestamp" pattern="yyyyMMddhhmm" />
	</tstamp>

	<!-- Retrieve our system property. -->
	<property environment="system" />
	<!--property name="targetPlatformFolder" location="${system.TARGET_PLATFORM}" /-->
	<!--property name="kielerRepositoryFolder" location="${system.KIELER_REPOSITORY}" /-->
	<property name="kielerRepositoryFolder" location="../.." />

	<!-- Some more properties that configure the behaviour of the build. -->
	<property name="outputFolder" location="target" />
	<property name="outputFolder.tmp" location="${outputFolder}/tmp" />
	<property name="outputFile.klaygwt" location="${outputFolder}/klay_layered_gwt_nightly_${timestamp}.zip" />
	<property name="licenseFile" location="epl-v10.html" />


	<!-- Arguments to gwtc and devmode targets, e.g. -style PRETTY -->
	<property name="gwt.args" value="" />
	<!-- Configure path to GWT SDK -->
	<property name="gwt.sdk" location="${system.GWT_SDK}" />

	<!-- Macro to copy sources from the pragmatics repository. -->
	<macrodef name="copyklaysources">
		<attribute name="fromdir" />
		<sequential>
			<copy todir="src-external" overwrite="true">
				<fileset dir="${kielerRepositoryFolder}/plugins/@{fromdir}">
					<include name="**" />
					<exclude name="bin" />
					<exclude name="META-INF/*" />
					<exclude name="about.*" />
					<exclude name="images" />
					<exclude name="model" />
					<exclude name="schema" />
					<exclude name="plugin.properties" />
					<exclude name="**/*.xml" />
					<exclude name="**/*.html" />
					<exclude name="**/*.exsd" />
					<exclude name="**/*.xsd" />
					<exclude name="**/*.ecore" />
					<exclude name="**/*.genmodel" />
					<exclude name="**/*.ecorediag" />
					<exclude name="**/*.png" />
					<exclude name="**/*.gif" />
					<exclude name="**/*.pdf" />
				</fileset>
				<filterchain>
					<!-- Remove code snippets that are incompativle with GWT -->
					<replaceregex pattern="// GWTExcludeStart(.+?)GWTExcludeEnd" replace="" flags="gis" byline="false" />
				</filterchain>
			</copy>
		</sequential>
	</macrodef>


	<!-- TARGET clean -->
	<target name="clean" description="Cleans this project.">
		
		<delete dir="${outputFolder}" />

		<delete dir="war/WEB-INF/classes" failonerror="false" />
		<delete dir="war/klaygwt" failonerror="false" />
		<delete dir="gwt-unitCache" failonerror="false" />

		<!-- Remove the klay layered sources which are copied from the original plugins -->
		<delete failonerror="false">
			<fileset dir="src-external">
				<exclude name="**/*.txt" />
				<!-- Retain the gwt xml file -->
				<exclude name="**/Klay.gwt.xml" />
				<exclude name="org/**" />
			</fileset>
		</delete>
	</target>

	<!-- TARGET copySrc -->
	<target name="copySrc" description="">
		<!-- Copy all relevant source files to the projects src-external folder. -->
		<copyklaysources fromdir="de.cau.cs.kieler.core/src/" />
		<copyklaysources fromdir="de.cau.cs.kieler.core.kgraph/src/" />
		<copyklaysources fromdir="de.cau.cs.kieler.kiml/src/" />
		<copyklaysources fromdir="de.cau.cs.kieler.klay.layered/src/" />
	</target>


	<!-- GWT TARGETS -->
	<path id="project.class.path">
		<pathelement location="war/WEB-INF/classes" />
		<pathelement location="${gwt.sdk}/gwt-user.jar" />
		<fileset dir="${gwt.sdk}" includes="gwt-dev*.jar" />
		<!-- Add any additional non-server libs (such as JUnit) -->
		<fileset dir="war/WEB-INF/lib" includes="**/*.jar" />
		<fileset dir="war/WEB-INF/classes" includes="**/*.class" />
	</path>

	<target name="libs" description="Copy libs to WEB-INF/lib">
		<mkdir dir="war/WEB-INF/lib" />
		<copy todir="war/WEB-INF/lib" file="${gwt.sdk}/gwt-servlet.jar" />
		<copy todir="war/WEB-INF/lib" file="${gwt.sdk}/gwt-servlet-deps.jar" />
		<!-- Add any additional server libs that need to be copied -->
	</target>

	<target name="javac" depends="libs, copySrc" description="Compile java source to bytecode">
		<mkdir dir="war/WEB-INF/classes" />
		<javac srcdir="src-external" includes="**" encoding="utf-8" destdir="war/WEB-INF/classes" source="1.5" target="1.5" nowarn="true" debug="true" debuglevel="lines,vars,source">
			<classpath refid="project.class.path" />
		</javac>
		<javac srcdir="src" includes="**" encoding="utf-8" destdir="war/WEB-INF/classes" source="1.5" target="1.5" nowarn="true" debug="true" debuglevel="lines,vars,source">
			<classpath refid="project.class.path" />
		</javac>
		<copy todir="war/WEB-INF/classes">
			<fileset dir="src" excludes="**/*.java" />
			<fileset dir="src-external" excludes="**/*.java" />
		</copy>
	</target>

	<target name="gwtc" depends="javac" description="GWT compile to JavaScript (production mode)">
		<java failonerror="true" fork="true" classname="com.google.gwt.dev.Compiler">
			<!--classpath>
        <pathelement location="${outputFolder.temp}/src"/>
        <path refid="project.class.path"/>
        <pathelement location="${gwt.sdk}/validation-api-1.0.0.GA.jar" />
        <pathelement location="${gwt.sdk}/validation-api-1.0.0.GA-sources.jar" />
      </classpath-->
			<classpath>
				<pathelement location="${gwt.sdk}/gwt-user.jar" />
				<fileset dir="${gwt.sdk}" includes="gwt-dev*.jar" />
				<pathelement location="src" />
				<pathelement location="src-external" />
				<pathelement location="src-external/org/eclipse/emf/emul" />
				<fileset dir="war/WEB-INF/lib" includes="**/*.jar" />
				<pathelement location="${gwt.sdk}/validation-api-1.0.0.GA.jar" />
				<pathelement location="${gwt.sdk}/validation-api-1.0.0.GA-sources.jar" />
			</classpath>
			<!-- add jvmarg -Xss16M or similar if you see a StackOverflowError    -Dgwt.jjs.permutationWorkerFactory=com.google.gwt.dev.ThreadedPermutationWorkerFactory -Dgwt.jjs.maxThreads=4  -->
			<jvmarg value="-Xmx512m" />
			<arg line="-war" />
			<arg value="war" />
			<!-- Additional arguments like -style PRETTY or -logLevel DEBUG -->
			<arg line="${gwt.args}" />
			<arg value="de.cau.klay.gwt.KlayGWT" />
		</java>
	</target>

	<!-- TARGET Compile -->
	<target name="compile" depends="copySrc, gwtc" description="Combiles to js" />

	<!-- TARGET Dist -->
	<target name="dist" depends="compile" description="Copy the compiled js files to the target folder.">
		<mkdir dir="${outputFolder}" />
		<mkdir dir="${outputFolder.tmp}" />
		
		<copy todir="${outputFolder.tmp}" overwrite="true">
			<fileset dir="war/klaygwt">
				<exclude name="gwt/**" />
				<exclude name="**/*.gif" />
				<exclude name="hosted.html" />
			</fileset>
		</copy>
		<zip destfile="${outputFile.klaygwt}" basedir="${outputFolder.tmp}" update="true" />
		
		<delete dir="${outputFolder.tmp}" failonerror="false" />
	</target>


	<!-- TARGET buidlall -->
	<target name="buildall" depends="clean, dist" description="Builds all configurations of the KLay library." />



</project>

